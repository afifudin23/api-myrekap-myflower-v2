{
  "openapi": "3.0.3",
  "info": {
    "title": "MyRekap API Documentation",
    "description": "MyRekap API provides endpoints to manage users, products, orders, and other operations. All endpoints require authentication via JWT. There are two roles: `superadmin` with full access and `admin` with limited access. This documentation covers all available routes, request parameters, response formats, and authentication requirements.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:{port}/api/v1",
      "description": "Local server",
      "variables": {
        "port": {
          "default": "5000"
        }
      }
    }
  ],

  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User Login",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "username": "johndoe",
                "password": "223344"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "appName": { "type": "string" },
                        "fullName": { "type": "string" },
                        "role": { "type": "string" }
                      }
                    }
                  }
                },
                "examples": {
                  "Login Successfully": {
                    "value": {
                      "message": "Login successfully",
                      "data": {
                        "appName": "myrekap",
                        "fullName": "John Doe",
                        "role": "SUPERADMIN"
                      }
                    }
                  },
                  "Account Not Verified": {
                    "value": {
                      "message": "Account not verified. OTP has been sent to your email",
                      "data": {
                        "needVerification": true,
                        "email": "johndoe@mail.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "AccessDeniedMyRekap": {
                    "$ref": "#/components/examples/AccessDeniedMyRekap"
                  },
                  "AccessDeniedMyFlower": {
                    "$ref": "#/components/examples/AccessDeniedMyFlower"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "User not found",
                  "errorCode": 404,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User Logout",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Logout successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register New Customer (MyFlower Only)",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": { "type": "string" },
                  "username": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "phoneNumber": { "type": "string" },
                  "customerCategory": { "type": "string", "enum": ["umum", "pemda", "perbankan"] },
                  "password": { "type": "string" },
                  "confPassword": { "type": "string" }
                },
                "required": [
                  "fullName",
                  "username",
                  "email",
                  "phoneNumber",
                  "customerCategory",
                  "password",
                  "confPassword"
                ]
              },
              "example": {
                "fullName": "John Doe",
                "username": "johndoe",
                "email": "johndoe@mail.com",
                "phoneNumber": "08123456789",
                "customerCategory": "umum",
                "password": "223344",
                "confPassword": "223344"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGlobalResponse"
                },
                "example": {
                  "message": "Registration successful. Please verify your email using the OTP code sent"
                }
              }
            }
          },
          "400": {
            "description": "Bad RequestS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "User Already Exists": {
                    "$ref": "#/components/examples/UserAlreadyExists"
                  },
                  "Require MyFlower App": {
                    "$ref": "#/components/examples/RequireMyFlowerApp"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntity": {
                    "$ref": "#/components/examples/UnprocessableEntityUsers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-auth": {
      "get": {
        "tags": ["Authentication"],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "summary": "Verify User Authentication",
        "responses": {
          "200": {
            "description": "Verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Verification successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/otp/resend": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Resend OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["email_verification", "password_reset"]
                  }
                },
                "required": ["email", "type"]
              },
              "examples": {
                "Resend OTP Email Verification": {
                  "value": {
                    "email": "johndoe@example.com",
                    "type": "email_verification"
                  }
                },
                "Resend OTP Password Reset": {
                  "value": {
                    "email": "johndoe@example.com",
                    "type": "password_reset"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP resent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Resend OTP Email Verification": {
                    "value": {
                      "message": "Resend user otp successfully"
                    }
                  },
                  "Account Not Verified (Reset Password)": {
                    "value": {
                      "message": "Account not verified. OTP has been sent to your email",
                      "data": {
                        "needVerification": true,
                        "email": "johndoe@mail.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  },
                  "Too Many Requests": {
                    "value": {
                      "message": "Too many requests, please try again later.",
                      "errorCode": 1008,
                      "errors": null
                    }
                  },
                  "User Not Found": {
                    "value": {
                      "message": "User not found",
                      "errorCode": 404,
                      "errors": null
                    }
                  },
                  "Email Already Verified - Email Verification": {
                    "value": {
                      "message": "Email already verified",
                      "errorCode": 4001,
                      "errors": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/otp/verify": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["email_verification", "password_reset"]
                  },
                  "otp": {
                    "type": "string"
                  }
                },
                "required": ["email", "otp", "type"]
              },
              "examples": {
                "Verify OTP Email Verification": {
                  "value": {
                    "email": "johndoe@mail.com",
                    "type": "email_verification",
                    "otp": "123456"
                  }
                },
                "Verify OTP Password Reset": {
                  "value": {
                    "email": "johndoe@mail.com",
                    "type": "password_reset",
                    "otp": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/VerifyOTPEmailVerificationResponse" },
                    { "$ref": "#/components/schemas/VerifyOTPPasswordResetResponse" }
                  ]
                },
                "examples": {
                  "Verify OTP Email Verification": {
                    "value": {
                      "message": "Verify user otp successfully",
                      "data": {
                        "success": true,
                        "type": "EMAIL_VERIFICATION",
                        "data": {
                          "fullName": "John Doe",
                          "role": "SUPERADMIN"
                        }
                      }
                    }
                  },
                  "Verify OTP Password Reset": {
                    "value": {
                      "message": "Verify user otp successfully",
                      "data": {
                        "success": true,
                        "type": "PASSWORD_RESET",
                        "resetToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWdrampmem4wMDAwamJ4YTE2ZXFsc3JlIiwiaWF0IjoxNjg4NzI1MTI0LCJleHAiOjE2ODg3MjYwMjR9.dV8Hk7mQ1pXnXGmYc1bXq8jv0nV7y5v3hX9Zz5Zz5Y"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  },
                  "Invalid Or Expired OTP": {
                    "value": {
                      "message": "Invalid or expired otp",
                      "errorCode": 2003,
                      "errors": null
                    }
                  },
                  "User Not Found": {
                    "value": {
                      "message": "User not found",
                      "errorCode": 1001,
                      "errors": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "patch": {
        "tags": ["Authentication"],
        "summary": "Reset User Password",
        "security": [{ "BearerResetToken": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "confPassword": {
                    "type": "string"
                  }
                },
                "required": ["password", "confPassword"]
              },
              "examples": {
                "Reset Password": {
                  "value": {
                    "password": "123456",
                    "confPassword": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Password reset successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing or Invalid Reset Token": {
                    "value": {
                      "message": "Missing or invalid resetToken",
                      "errorCode": 2004,
                      "errors": null
                    }
                  },
                  "Invalid Token Type": {
                    "value": {
                      "message": "Invalid token type",
                      "errorCode": 2004,
                      "errors": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "User Not Found": {
                    "value": {
                      "message": "User not found",
                      "errorCode": 1001,
                      "errors": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get Current User",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "fullName": { "type": "string" },
                          "username": { "type": "string" },
                          "email": { "type": "string" },
                          "phoneNumber": { "type": "string" },
                          "customerCategory": {
                            "type": "string",
                            "enum": ["umum", "pemda", "perbankan"],
                            "nullable": true
                          },
                          "role": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "User current retrieved successfully",
                  "data": {
                    "id": "cmh3g62b90000xqfayx6gftib",
                    "fullName": "John Doe",
                    "username": "johndoe",
                    "email": "johndoe@gmail.com",
                    "phoneNumber": "08485845",
                    "customerCategory": null,
                    "role": "SUPERADMIN"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "patch": {
        "tags": ["Users (MyFlower)"],
        "summary": "Update Profile User Customer",
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myflower to match the cookie token (token_myflower) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyFlower": {
                "value": "myflower"
              }
            }
          },
          {
            "$ref": "#/components/parameters/user-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "description": "No password change",
                    "type": "object",
                    "properties": {
                      "fullName": { "type": "string" },
                      "username": { "type": "string" },
                      "email": { "type": "string", "format": "email" },
                      "phoneNumber": { "type": "string" },
                      "customerCategory": {
                        "type": "string",
                        "enum": ["umum", "pemda", "perbankan"]
                      }
                    },
                    "required": ["fullName", "username", "email", "phoneNumber", "customerCategory"]
                  },
                  {
                    "description": "Password change (both required)",
                    "type": "object",
                    "properties": {
                      "fullName": { "type": "string" },
                      "username": { "type": "string" },
                      "email": { "type": "string", "format": "email" },
                      "phoneNumber": { "type": "string" },
                      "customerCategory": {
                        "type": "string",
                        "enum": ["umum", "pemda", "perbankan"]
                      },
                      "oldPassword": { "type": "string" },
                      "newPassword": { "type": "string" },
                      "confPassword": { "type": "string" }
                    },
                    "required": [
                      "fullName",
                      "username",
                      "email",
                      "phoneNumber",
                      "customerCategory",
                      "oldPassword",
                      "newPassword",
                      "confPassword"
                    ]
                  }
                ]
              },

              "example": {
                "fullName": "Customer 1",
                "username": "customer1",
                "email": "customer1@mail.com",
                "phoneNumber": "08123456789",
                "customerCategory": "umum",
                "password": "123456",
                "confPassword": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGlobalResponse"
                },
                "example": {
                  "message": "User updated successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "User Already Exists": {
                    "$ref": "#/components/examples/UserAlreadyExists"
                  },
                  "Require MyFlower App": {
                    "$ref": "#/components/examples/RequireMyFlowerApp"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "User not found",
                  "errorCode": 1001,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntity": {
                    "$ref": "#/components/examples/UnprocessableEntityUsers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/customers": {
      "get": {
        "tags": ["Users (MyRekap)"],
        "summary": "Get All User Customers",
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myrekap to match the cookie token (token_myrekap) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyRekap": {
                "value": "myrekap"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "userCode": { "type": "string" },
                          "fullName": { "type": "string" },
                          "username": { "type": "string" },
                          "email": { "type": "string" },
                          "phoneNumber": { "type": "string" },
                          "customerCategory": {
                            "type": "string",
                            "enum": ["UMUM", "PEMDA", "PERBANKAN"]
                          },
                          "role": {
                            "type": "string",
                            "enum": ["CUSTOMER", "ADMIN", "SUPERADMIN"]
                          },
                          "isVerified": { "type": "boolean" },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "User retrieved successfully",
                  "data": [
                    {
                      "id": "cmh6ep6070009xqobb2tennjp",
                      "userCode": "USR-E2MH6EP607-B73614",
                      "fullName": "Udin",
                      "username": "udin",
                      "email": "afifu5881@gmail.com",
                      "phoneNumber": "908239823",
                      "customerCategory": "PERBANKAN",
                      "role": "CUSTOMER",
                      "isVerified": true,
                      "createdAt": "2025-10-25T14:59:55.687Z",
                      "updatedAt": "2025-10-25T15:00:12.855Z"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  },
                  "Require MyRekap App": {
                    "$ref": "#/components/examples/RequireMyRekapApp"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      }
    },

    "/users/admins": {
      "get": {
        "tags": ["Users (MyRekap)"],
        "summary": "Get All Users (Superadmin Only)",
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myrekap to match the cookie token (token_myrekap) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyRekap": {
                "value": "myrekap"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "userCode": { "type": "string" },
                          "fullName": { "type": "string" },
                          "username": { "type": "string" },
                          "email": { "type": "string" },
                          "phoneNumber": { "type": "string" },
                          "customerCategory": { "type": "string", "nullable": true },
                          "role": { "type": "string" },
                          "isVerified": { "type": "boolean" },
                          "createdAt": { "type": "string" },
                          "updatedAt": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "User retrieved successfully",
                  "data": [
                    {
                      "id": "cmh3g62b90000xqfayx6gftib",
                      "userCode": "USR-5AMH3G62B8-7B8E18",
                      "fullName": "John Doe",
                      "username": "admin",
                      "email": "afifu5882@gmail.com",
                      "phoneNumber": "08975836972",
                      "customerCategory": null,
                      "role": "SUPERADMIN",
                      "isVerified": true,
                      "createdAt": "2025-10-23T13:17:45.141Z",
                      "updatedAt": "2025-10-23T13:17:45.141Z"
                    },
                    {
                      "id": "cmh49vpji0004xqp0xr2s57c7",
                      "userCode": "USR-ADMH49VPJH-9A0041",
                      "fullName": "maya",
                      "username": "maya",
                      "email": "maya@gmail.co",
                      "phoneNumber": "08239232",
                      "customerCategory": null,
                      "role": "ADMIN",
                      "isVerified": false,
                      "createdAt": "2025-10-24T03:09:30.510Z",
                      "updatedAt": "2025-10-24T04:38:47.690Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Access Denied - Superadmin Only": {
                    "$ref": "#/components/examples/AccessDeniedSuperadminOnly"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users (MyRekap)"],
        "summary": "Create New User (Superadmin Only)",
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myrekap to match the cookie token (token_myrekap) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyRekap": {
                "value": "myrekap"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" },
                  "confPassword": { "type": "string" }
                },
                "required": ["username", "email", "password", "confPassword"]
              },
              "example": {
                "username": "newuser",
                "email": "newuser@example.com",
                "password": "123456",
                "confPassword": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGlobalResponse"
                },
                "example": {
                  "message": "User created successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "User Already Exists": {
                    "$ref": "#/components/examples/UserAlreadyExists"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Access Denied - Superadmin Only": {
                    "$ref": "#/components/examples/AccessDeniedSuperadminOnly"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntity": {
                    "$ref": "#/components/examples/UnprocessableEntityUsers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "patch": {
        "tags": ["Users (MyRekap)"],
        "summary": "Update User by ID (Superadmin Only)",
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myrekap to match the cookie token (token_myrekap) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyRekap": {
                "value": "myrekap"
              }
            }
          },
          {
            "$ref": "#/components/parameters/user-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "description": "No password change",
                    "type": "object",
                    "properties": {
                      "fullName": { "type": "string" },
                      "username": { "type": "string" },
                      "email": { "type": "string", "format": "email" },
                      "phoneNumber": { "type": "string" }
                    },
                    "required": ["fullName", "username", "email", "phoneNumber"]
                  },
                  {
                    "description": "Password change (both required)",
                    "type": "object",
                    "properties": {
                      "fullName": { "type": "string" },
                      "username": { "type": "string" },
                      "email": { "type": "string", "format": "email" },
                      "phoneNumber": { "type": "string" },
                      "password": { "type": "string" },
                      "confPassword": { "type": "string" }
                    },
                    "required": ["fullName", "username", "email", "phoneNumber", "password", "confPassword"]
                  }
                ]
              },

              "example": {
                "fullName": "John Doe",
                "username": "johndoe",
                "email": "johndoe@mail.com",
                "phoneNumber": "08123456789",
                "password": "123456",
                "confPassword": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGlobalResponse"
                },
                "example": {
                  "message": "User update successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "User Already Exists": {
                    "$ref": "#/components/examples/UserAlreadyExists"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Access Denied - Superadmin Only": {
                    "$ref": "#/components/examples/AccessDeniedSuperadminOnly"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "User not found",
                  "errorCode": 1001,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntity": {
                    "$ref": "#/components/examples/UnprocessableEntityUsers"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users (MyRekap)"],
        "summary": "Delete User by ID (Superadmin Only)",
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myrekap to match the cookie token (token_myrekap) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyRekap": {
                "value": "myrekap"
              }
            }
          },
          {
            "$ref": "#/components/parameters/user-id"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGlobalResponse"
                },
                "example": {
                  "message": "User deleted successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Access Denied - Superadmin Only": {
                    "$ref": "#/components/examples/AccessDeniedSuperadminOnly"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "User not found",
                  "errorCode": 1001,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },

    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "productCode": { "type": "string" },
                          "name": { "type": "string" },
                          "price": { "type": "number" },
                          "isActive": { "type": "boolean" }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Products retrieved successfully",
                  "data": [
                    {
                      "id": "cmh3nqrdt0000xq0xaqebjqaq",
                      "productCode": "PRD-BAMH3NQNNG-046F89",
                      "name": "coba",
                      "price": 1000,
                      "stock": 96,
                      "description": "mantapppp",
                      "isActive": true,
                      "createdAt": "2025-10-23T16:49:48.065Z",
                      "images": [
                        {
                          "id": "cmh3nqrdt0001xq0xaaqn3ldw",
                          "fileName": "PRD-BAMH3NQNNG-046F89-639.png",
                          "size": 124700,
                          "publicId": "myrekap-v2/products/coba/PRD-BAMH3NQNNG-046F89-639",
                          "secureUrl": "https://res.cloudinary.com/dwt5ano0z/image/upload/v1761238187/myrekap-v2/products/coba/PRD-BAMH3NQNNG-046F89-639.png",
                          "productId": "cmh3nqrdt0000xq0xaqebjqaq"
                        }
                      ]
                    },
                    {
                      "id": "cmh481umz0002xqp04pqa5zg5",
                      "productCode": "PRD-47MH481RDF-F3AC02",
                      "name": "yaya",
                      "price": 1000,
                      "stock": 99,
                      "description": "may",
                      "isActive": true,
                      "createdAt": "2025-10-24T02:18:17.819Z",
                      "images": [
                        {
                          "id": "cmh481umz0003xqp03b1m3zfu",
                          "fileName": "PRD-47MH481RDF-F3AC02-498.png",
                          "size": 132808,
                          "publicId": "myrekap-v2/products/yaya/PRD-47MH481RDF-F3AC02-498",
                          "secureUrl": "https://res.cloudinary.com/dwt5ano0z/image/upload/v1761272297/myrekap-v2/products/yaya/PRD-47MH481RDF-F3AC02-498.png",
                          "productId": "cmh481umz0002xqp04pqa5zg5"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products (MyRekap)"],
        "summary": "Create a new product",
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myrekap to match the cookie token (token_myrekap) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyRekap": {
                "value": "myrekap"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "price": { "type": "number" },
                  "description": { "type": "string" },
                  "isActive": { "type": "boolean" },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Product images min 1 file and max 5 files with size max 2 mb per file. (jpg, png, jpeg)"
                  }
                },
                "required": ["name", "price", "description", "isActive", "images"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGlobalResponse"
                },
                "example": {
                  "message": "Product created successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Product Already Exists": {
                    "value": {
                      "message": "Product name already exists",
                      "errorCode": 4004,
                      "errors": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntityResponse": {
                    "$ref": "#/components/examples/UnprocessableEntityProducts"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/product-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "productCode": { "type": "string" },
                        "name": { "type": "string" },
                        "price": { "type": "number" },
                        "stock": { "type": "number" },
                        "description": { "type": "string" },
                        "isActive": { "type": "boolean" },
                        "createdAt": { "type": "string" },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string" },
                              "fileName": { "type": "string" },
                              "size": { "type": "number" },
                              "publicId": { "type": "string" },
                              "secureUrl": { "type": "string" },
                              "productId": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Product retrieved successfully",
                  "data": {
                    "id": "cmh3nqrdt0000xq0xaqebjqaq",
                    "productCode": "PRD-BAMH3NQNNG-046F89",
                    "name": "Product 1",
                    "price": 1000,
                    "stock": 96,
                    "description": "mantapppp",
                    "isActive": true,
                    "createdAt": "2025-10-23T16:49:48.065Z",
                    "images": [
                      {
                        "id": "cmh3nqrdt0001xq0xaaqn3ldw",
                        "fileName": "PRD-BAMH3NQNNG-046F89-639.png",
                        "size": 124700,
                        "publicId": "myrekap-v2/products/coba/PRD-BAMH3NQNNG-046F89-639",
                        "secureUrl": "https://res.cloudinary.com/dwt5ano0z/image/upload/v1761238187/myrekap-v2/products/coba/PRD-BAMH3NQNNG-046F89-639.png",
                        "productId": "cmh3nqrdt0000xq0xaqebjqaq"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntityResponse": {
                    "$ref": "#/components/examples/UnprocessableEntityProducts"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Products (MyRekap)"],
        "summary": "Update product by ID",
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myrekap to match the cookie token (token_myrekap) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyRekap": {
                "value": "myrekap"
              }
            }
          },
          {
            "$ref": "#/components/parameters/product-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "price": { "type": "number" },
                  "description": { "type": "string" },
                  "isActive": { "type": "boolean" },
                  "publicIdsToDelete": { "type": "array", "items": { "type": "string" } },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Product images min 1 file and max 5 files with size max 2 mb per file. (jpg, png, jpeg)"
                  }
                },
                "required": ["name", "price", "description", "isActive", "images"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGlobalResponse"
                },
                "example": {
                  "message": "Product updated successfully",
                  "data": {
                    "id": "cmgmgtaiz0000ms8nx0lgpgg2"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntityResponse": {
                    "$ref": "#/components/examples/UnprocessableEntityProducts"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Products (MyRekap)"],
        "summary": "Delete product by ID",
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myrekap to match the cookie token (token_myrekap) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyRekap": {
                "value": "myrekap"
              }
            }
          },
          {
            "$ref": "#/components/parameters/product-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGlobalResponse"
                },
                "example": {
                  "message": "Product deleted successfully",
                  "data": {
                    "id": "cmgmgtaiz0000ms8nx0lgpgg2"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },
    "/products{id}/stock": {
      "patch": {
        "summary": "Update product stock by ID",
        "tags": ["Products (MyRekap)"],
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myrekap to match the cookie token (token_myrekap) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyRekap": {
                "value": "myrekap"
              }
            }
          },
          {
            "$ref": "#/components/parameters/product-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": { "type": "string", "enum": ["stock_in", "stock_out"] },
                  "quantity": { "type": "number" },
                  "note": {
                    "type": "string",
                    "description": "Optional, but cannot be an empty string"
                  }
                },
                "required": ["type", "quantity"]
              },
              "example": {
                "type": "stock_in",
                "quantity": 50
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "isUpdated": { "type": "boolean" }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Product updated successfully",
                  "data": {
                    "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                    "isUpdated": true
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Invalid data",
                  "errorCode": 8001,
                  "errors": [
                    {
                      "code": "invalid_type",
                      "expected": "number",
                      "received": "undefined",
                      "path": ["quantity"],
                      "message": "Quantity is required"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/products/stocks/monthly": {
      "get": {
        "tags": ["Products (MyRekap)"],
        "summary": "Get Monthly Stock Report",
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myrekap to match the cookie token (token_myrekap) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyRekap": {
                "value": "myrekap"
              }
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Filter by month (1–12).",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            },
            "example": 10
          },
          {
            "name": "year",
            "in": "query",
            "description": "Filter by year (e.g. 2025).",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 2000
            },
            "example": 2025
          },
          {
            "name": "type",
            "in": "query",
            "description": "Specify report type, either 'general' or 'detail'.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["general", "stock_in", "stock_out"]
            },
            "example": "general"
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/MonthlyStockGeneral" },
                    { "$ref": "#/components/schemas/MonthlyStockDetail" }
                  ]
                },
                "examples": {
                  "Monthly Stock General": {
                    "value": {
                      "message": "Monthly stock report retrieved successfully",
                      "data": [
                        {
                          "id": "cmh8r8tlc0005xqtp9jbm4mia",
                          "productId": "cmh3nqrdt0000xq0xaqebjqaq",
                          "month": 10,
                          "year": 2025,
                          "initialStock": 0,
                          "stockIn": 100,
                          "stockOut": 4,
                          "finalStock": 96,
                          "createdAt": "2025-10-27T06:26:40.464Z",
                          "product": {
                            "productCode": "PRD-BAMH3NQNNG-046F89",
                            "name": "coba"
                          }
                        },
                        {
                          "id": "cmh8r8tlo0009xqtpo9plurzp",
                          "productId": "cmh481umz0002xqp04pqa5zg5",
                          "month": 10,
                          "year": 2025,
                          "initialStock": 0,
                          "stockIn": 100,
                          "stockOut": 1,
                          "finalStock": 99,
                          "createdAt": "2025-10-27T06:26:40.476Z",
                          "product": {
                            "productCode": "PRD-47MH481RDF-F3AC02",
                            "name": "yaya"
                          }
                        }
                      ]
                    }
                  },
                  "Monthly Stock Detail": {
                    "value": {
                      "message": "Monthly stock report retrieved successfully",
                      "data": [
                        {
                          "id": "cmh47eoy20001xqp0zjdl5nmx",
                          "productId": "cmh3nqrdt0000xq0xaqebjqaq",
                          "type": "STOCK_IN",
                          "quantity": 100,
                          "note": "masukkk",
                          "createdAt": "2025-10-24T02:00:17.354Z",
                          "product": {
                            "productCode": "PRD-BAMH3NQNNG-046F89",
                            "name": "coba"
                          }
                        },
                        {
                          "id": "cmh8p9k580003xqfuwxei137v",
                          "productId": "cmh481umz0002xqp04pqa5zg5",
                          "type": "STOCK_IN",
                          "quantity": 100,
                          "note": "masuk",
                          "createdAt": "2025-10-27T05:31:15.644Z",
                          "product": {
                            "productCode": "PRD-47MH481RDF-F3AC02",
                            "name": "yaya"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Unauthorized",
                  "errorCode": 4001,
                  "errors": null
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products (MyRekap)"],
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myrekap to match the cookie token (token_myrekap) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyRekap": {
                "value": "myrekap"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "month": { "type": "string", "description": "Field month must be 1-12" },
                  "year": { "type": "string", "description": "Field year" }
                }
              },
              "example": {
                "month": "10",
                "year": "2025"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "month": { "type": "number" },
                        "year": { "type": "number" }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Monthly stock report created successfully",
                  "data": {
                    "month": 10,
                    "year": 2025
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Unauthorized",
                  "errorCode": 4001,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },

    "/products/{id}/reviews": {
      "get": {
        "tags": ["Product Reviews"],
        "parameters": [
          { "$ref": "#/components/parameters/x-app-name" },
          { "$ref": "#/components/parameters/product-id" }
        ],
        "responses": {
          "200": {
            "description": "Product reviews retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "rating": { "type": "number" },
                          "comment": { "type": "string" },
                          "userId": { "type": "string" },
                          "productId": { "type": "string" },
                          "user": {
                            "type": "object",
                            "properties": {
                              "fullName": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Product reviews retrieved successfully",
                  "data": [
                    {
                      "id": "cmhfvsm7h0001xqnfqgjmg1mi",
                      "rating": 4,
                      "comment": "Mantap",
                      "userId": "cmh6ep6070009xqobb2tennjp",
                      "productId": "cmh3nqrdt0000xq0xaqebjqaq",
                      "user": {
                        "fullName": "Udin"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Unauthorized",
                  "errorCode": 4001,
                  "errors": null
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Product Reviews"],
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myflower to match the cookie token (token_myflower) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyFlower": {
                "value": "myflower"
              }
            }
          },
          { "$ref": "#/components/parameters/product-id" }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": { "type": "number" },
                  "comment": { "type": "string" }
                },
                "required": ["rating", "comment"]
              },
              "example": {
                "rating": 4,
                "comment": "Mantap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product review upsert successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" }
                      }
                    }
                  }
                },
                "examples": {
                  "Create Product Review": {
                    "value": {
                      "message": "Product review created successfully",
                      "data": {
                        "id": "cmhfvsm7h0001xqnfqgjmg1mi"
                      }
                    }
                  },
                  "Update Product Review": {
                    "value": {
                      "message": "Product review updated successfully",
                      "data": {
                        "id": "cmhfvsm7h0001xqnfqgjmg1mi"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Unauthorized",
                  "errorCode": 4001,
                  "errors": null
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Product Reviews"],
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myflower to match the cookie token (token_myflower) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyFlower": {
                "value": "myflower"
              }
            }
          },
          { "$ref": "#/components/parameters/product-id" }
        ],
        "responses": {
          "200": {
            "description": "Delete product review successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Product review deleted successfully",
                  "data": {
                    "id": "cmhfvsm7h0001xqnfqgjmg1mi"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Unauthorized",
                  "errorCode": 4001,
                  "errors": null
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },

    "/carts": {
      "get": {
        "tags": ["CartItems"],
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myflower to match the cookie token (token_myflower) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyFlower": {
                "value": "myflower"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart items retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "quantity": { "type": "number" },
                        "product": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "name": { "type": "string" },
                            "price": { "type": "number" },
                            "images": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "secureUrl": { "type": "string" }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Cart items retrieved successfully",
                  "data": [
                    {
                      "id": "cmhfxbp3k0003xqslr9tm4dcv",
                      "quantity": 2,
                      "product": {
                        "id": "cmh3nqrdt0000xq0xaqebjqaq",
                        "name": "coba",
                        "price": 1000,
                        "images": [
                          {
                            "secureUrl": "https://res.cloudinary.com/dwt5ano0z/image/upload/v1761238187/myrekap-v2/products/coba/PRD-BAMH3NQNNG-046F89-639.png"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["CartItems"],
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myflower to match the cookie token (token_myflower) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyFlower": {
                "value": "myflower"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": { "type": "string" }
                },
                "required": ["productId"]
              },
              "example": {
                "productId": "cmh3nqrdt0000xq0xaqebjqaq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added to cart successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "quantity": { "type": "number" }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Item added to cart successfully",
                  "data": {
                    "id": "cmhfxbp3k0003xqslr9tm4dcv",
                    "quantity": 1
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["CartItems"],
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myflower to match the cookie token (token_myflower) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyFlower": {
                "value": "myflower"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart cleared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": { "type": "number" }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Cart cleared successfully",
                  "data": {
                    "count": 1
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts/{productId}": {
      "delete": {
        "tags": ["CartItems"],
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myflower to match the cookie token (token_myflower) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyFlower": {
                "value": "myflower"
              }
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "string",
              "example": "cmgmgtaiz0000ms8nx0lgpgg2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": { "id": { "type": "string" } }
                    }
                  }
                },
                "example": {
                  "message": "Cart item deleted successfully",
                  "data": {
                    "id": "cmhfxbp3k0003xqslr9tm4dcv"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Unauthorized",
                  "errorCode": 4001,
                  "errors": null
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },
    "/carts/{productId}/{action}": {
      "patch": {
        "tags": ["CartItems"],
        "parameters": [
          {
            "name": "x-app-name",
            "in": "header",
            "description": "Application name must be myflower to match the cookie token (token_myflower) for authentication.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "MyFlower": {
                "value": "myflower"
              }
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "string",
              "example": "cmgmgtaiz0000ms8nx0lgpgg2"
            }
          },
          {
            "name": "action",
            "in": "path",
            "description": "Action to perform on the cart item",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["increment", "decrement"],
              "example": "increment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart item quantity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" }
                      }
                    }
                  }
                },
                "examples": {
                  "Cart Item Decremented": {
                    "value": {
                      "message": "Cart item decremented successfully",
                      "data": {
                        "id": "cmhfysdbd0001xqk8jjkw4huu"
                      }
                    }
                  },
                  "Cart Item Incremented": {
                    "value": {
                      "message": "Cart item incremented successfully",
                      "data": {
                        "id": "cmhfysdbd0001xqk8jjkw4huu"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Unauthorized",
                  "errorCode": 4001,
                  "errors": null
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },

    "/orders/myrekap": {
      "get": {
        "tags": ["Orders MyRekap"],
        "summary": "Get all orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "name": "month",
            "in": "query",
            "description": "Filter by month (1-12).",
            "schema": { "type": "integer", "minimum": 1, "maximum": 12 },
            "example": 10
          },
          {
            "name": "year",
            "in": "query",
            "description": "Filter by year.",
            "schema": { "type": "integer" },
            "example": 2025
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Filter by start date (ISO 8601 format, e.g. 2025-10-31 or 2025-10-31T00:00:00Z).",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2025-10-31T00:00:00Z"
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "Filter by start date (ISO 8601 format, e.g. 2025-10-31 or 2025-10-31T00:00:00Z).",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2025-10-31T00:00:00Z"
          },
          {
            "name": "customer_category",
            "in": "query",
            "description": "Filter by customer category.",
            "schema": {
              "type": "string",
              "enum": ["all", "umum", "pemda", "perbankan"]
            },
            "example": "all"
          },
          {
            "name": "payment_method",
            "in": "query",
            "description": "Filter by payment method.",
            "schema": {
              "type": "string",
              "enum": ["all", "cash", "bank_transfer", "cod", "credit_card", "cstore", "qris", "ewallet"]
            },
            "example": "all"
          },
          {
            "name": "payment_status",
            "in": "query",
            "description": "Filter by payment status.",
            "schema": {
              "type": "string",
              "enum": ["all", "unpaid", "paid", "pending", "expired", "denied", "refunded"]
            },
            "example": "all"
          },
          {
            "name": "order_status",
            "in": "query",
            "description": "Filter by order status.",
            "schema": {
              "type": "string",
              "enum": ["all", "in_process", "completed", "canceled", "delivery"]
            },
            "example": "all"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGetAllResponse"
                },
                "example": {
                  "message": "Orders retrieved successfully",
                  "data": [
                    {
                      "id": "cmh8pjv130009xqfui7nd6i71",
                      "source": "MYREKAP",
                      "orderCode": "ORD-29MH8PJRGH-E13113",
                      "userId": "cmh3g62b90000xqfayx6gftib",
                      "customerName": "amdmd",
                      "customerCategory": "UMUM",
                      "phoneNumber": "1232",
                      "deliveryOption": "DELIVERY",
                      "readyDate": "2025-10-28T08:00:00.000Z",
                      "shippingCost": 1232132,
                      "deliveryAddress": "dsadadsa",
                      "totalPrice": 2000,
                      "paymentMethod": "CASH",
                      "paymentProvider": null,
                      "paymentStatus": "PAID",
                      "orderStatus": "IN_PROCESS",
                      "orderDate": "2025-10-27T05:39:16.308Z",
                      "items": [
                        {
                          "id": "cmh8qfkum0001xqtp6qysx93t",
                          "orderId": "cmh8pjv130009xqfui7nd6i71",
                          "productId": "cmh481umz0002xqp04pqa5zg5",
                          "quantity": 1,
                          "message": "dsad",
                          "unitPrice": 1000,
                          "totalPrice": 1000,
                          "product": {
                            "id": "cmh481umz0002xqp04pqa5zg5",
                            "productCode": "PRD-47MH481RDF-F3AC02",
                            "name": "yaya",
                            "price": 1000,
                            "stock": 99,
                            "description": "may",
                            "isActive": true,
                            "createdAt": "2025-10-24T02:18:17.819Z",
                            "images": [
                              {
                                "id": "cmh481umz0003xqp03b1m3zfu",
                                "fileName": "PRD-47MH481RDF-F3AC02-498.png",
                                "size": 132808,
                                "publicId": "myrekap-v2/products/yaya/PRD-47MH481RDF-F3AC02-498",
                                "secureUrl": "https://res.cloudinary.com/dwt5ano0z/image/upload/v1761272297/myrekap-v2/products/yaya/PRD-47MH481RDF-F3AC02-498.png",
                                "productId": "cmh481umz0002xqp04pqa5zg5"
                              }
                            ]
                          }
                        },
                        {
                          "id": "cmh8qfkum0003xqtpwcrdd2wp",
                          "orderId": "cmh8pjv130009xqfui7nd6i71",
                          "productId": "cmh3nqrdt0000xq0xaqebjqaq",
                          "quantity": 1,
                          "message": null,
                          "unitPrice": 1000,
                          "totalPrice": 1000,
                          "product": {
                            "id": "cmh3nqrdt0000xq0xaqebjqaq",
                            "productCode": "PRD-BAMH3NQNNG-046F89",
                            "name": "coba",
                            "price": 1000,
                            "stock": 124,
                            "description": "mantapppp",
                            "isActive": true,
                            "createdAt": "2025-10-23T16:49:48.065Z",
                            "images": [
                              {
                                "id": "cmh3nqrdt0001xq0xaaqn3ldw",
                                "fileName": "PRD-BAMH3NQNNG-046F89-639.png",
                                "size": 124700,
                                "publicId": "myrekap-v2/products/coba/PRD-BAMH3NQNNG-046F89-639",
                                "secureUrl": "https://res.cloudinary.com/dwt5ano0z/image/upload/v1761238187/myrekap-v2/products/coba/PRD-BAMH3NQNNG-046F89-639.png",
                                "productId": "cmh3nqrdt0000xq0xaqebjqaq"
                              }
                            ]
                          }
                        }
                      ],
                      "images": []
                    },
                    {
                      "id": "cmh4q4j980003xqzj5ulr632p",
                      "source": "MYREKAP",
                      "orderCode": "ORD-DFMH4Q4J96-5C74EF",
                      "userId": "cmh3g62b90000xqfayx6gftib",
                      "customerName": "Sahroni",
                      "customerCategory": "PERBANKAN",
                      "phoneNumber": "0888888888",
                      "deliveryOption": "SELF_PICKUP",
                      "readyDate": "2025-07-28T00:00:00.000Z",
                      "shippingCost": 0,
                      "deliveryAddress": null,
                      "totalPrice": 1000,
                      "paymentMethod": "BANK_TRANSFER",
                      "paymentProvider": null,
                      "paymentStatus": "PAID",
                      "orderStatus": "IN_PROCESS",
                      "orderDate": "2025-10-24T10:44:16.124Z",
                      "items": [
                        {
                          "id": "cmhg2hiy90001xq9qjkj1o5r5",
                          "orderId": "cmh4q4j980003xqzj5ulr632p",
                          "productId": "cmh3nqrdt0000xq0xaqebjqaq",
                          "quantity": 3,
                          "message": null,
                          "unitPrice": 1000,
                          "totalPrice": 3000,
                          "product": {
                            "id": "cmh3nqrdt0000xq0xaqebjqaq",
                            "productCode": "PRD-BAMH3NQNNG-046F89",
                            "name": "coba",
                            "price": 1000,
                            "stock": 124,
                            "description": "mantapppp",
                            "isActive": true,
                            "createdAt": "2025-10-23T16:49:48.065Z",
                            "images": [
                              {
                                "id": "cmh3nqrdt0001xq0xaaqn3ldw",
                                "fileName": "PRD-BAMH3NQNNG-046F89-639.png",
                                "size": 124700,
                                "publicId": "myrekap-v2/products/coba/PRD-BAMH3NQNNG-046F89-639",
                                "secureUrl": "https://res.cloudinary.com/dwt5ano0z/image/upload/v1761238187/myrekap-v2/products/coba/PRD-BAMH3NQNNG-046F89-639.png",
                                "productId": "cmh3nqrdt0000xq0xaqebjqaq"
                              }
                            ]
                          }
                        }
                      ],
                      "images": [
                        {
                          "id": "cmhg2hiya0005xq9qerl1rzeb",
                          "orderId": "cmh4q4j980003xqzj5ulr632p",
                          "type": "PAYMENT_PROOF",
                          "fileName": "ORD-DFMH4Q4J96-5C74EF-222.jpeg",
                          "size": 9883,
                          "publicId": "myrekap-v2/payment-proof/ORD-DFMH4Q4J96-5C74EF-222",
                          "secureUrl": "https://res.cloudinary.com/dwt5ano0z/image/upload/v1761988544/myrekap-v2/payment-proof/ORD-DFMH4Q4J96-5C74EF-222.jpg"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  },
                  "Require MyRekap App": {
                    "$ref": "#/components/examples/RequireMyRekapApp"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Orders MyRekap"],
        "summary": "Create a new order",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": { "type": "string" },
                  "customerCategory": { "type": "string", "enum": ["UMUM", "PEMDA", "PERBANKAN"] },
                  "phoneNumber": { "type": "string" },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": { "type": "string" },
                        "quantity": { "type": "number" },
                        "message": { "type": "string" }
                      },
                      "required": ["productId", "quantity"]
                    },
                    "minItems": 1,
                    "description": "Minimum 1 item required"
                  },
                  "readyDate": { "type": "string" },
                  "deliveryOptions": { "type": "string", "enum": ["SELF_PICKUP", "DELIVERY"] },
                  "deliveryAddress": {
                    "type": "string",
                    "nullable": true,
                    "description": "Required when deliveryOption is DELIVERY"
                  },
                  "shippingCost": {
                    "type": "number",
                    "default": 0,
                    "description": "Required when deliveryOption is DELIVERY"
                  },
                  "isPaid": { "type": "boolean", "default": false },
                  "paymentMethod": {
                    "type": "string",
                    "enum": ["BANK_TRANSFER", "CASH"],
                    "nullable": true,
                    "description": "Required when isPaid is true. Can be null when isPaid is false"
                  },
                  "paymentProof": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true,
                    "description": "Required when isPaid is true and paymentMethod is BANK_TRANSFER. Can be null when isPaid is false or paymentMethod is CASH. Max 2 MB."
                  }
                },
                "required": [
                  "customerName",
                  "customerCategory",
                  "phoneNumber",
                  "items",
                  "deliveryOptions",
                  "readyDate",
                  "isPaid"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "orderCode": { "type": "string" },
                    "userId": { "type": "string" },
                    "customerName": { "type": "string" },
                    "customerCategory": {
                      "type": "string",
                      "enum": ["UMUM", "PEMDA", "PERBANKAN"]
                    },
                    "phoneNumber": { "type": "string" },
                    "deliveryOptions": { "type": "string", "enum": ["SELF_PICKUP", "DELIVERY"] },
                    "readyDate": { "type": "string" },
                    "shippingCost": { "type": "number" },
                    "deliveryAddress": { "type": "string" },
                    "totalPrice": { "type": "number" },
                    "paymentMethod": {
                      "type": "string",
                      "enum": ["BANK_TRANSFER", "CASH_ON_DELIVERY"]
                    },
                    "paymentStatus": { "type": "string", "enum": ["PAID", "UNPAID"] },
                    "orderStatus": {
                      "type": "string",
                      "enum": ["IN_PROCESS", "COMPLETED", "CANCELLED"]
                    },
                    "orderDate": { "type": "string" },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderItem"
                      }
                    }
                  }
                },
                "example": {
                  "message": "Order created successfully",
                  "data": {
                    "id": "cmgncy7tr0001msxafnyxd4dn",
                    "orderCode": "ORD-4AMGNCY7TR-BA9427",
                    "userId": "cmgmg3v820000ms7cm1g7gz0i",
                    "customerName": "Budi",
                    "customerCategory": "UMUM",
                    "phoneNumber": "08123456789",
                    "deliveryOption": "DELIVERY",
                    "readyDate": "2025-08-28T00:00:00.000Z",
                    "shippingCost": 1000,
                    "deliveryAddress": "Jl. Mawar No. 12",
                    "totalPrice": 40000,
                    "paymentMethod": "BANK_TRANSFER",
                    "paymentStatus": "PAID",
                    "orderStatus": "IN_PROCESS",
                    "orderDate": "2025-10-12T07:03:21.376Z",
                    "items": [
                      {
                        "id": "cmgncy7tr0003msxagdfg9cd0",
                        "orderId": "cmgncy7tr0001msxafnyxd4dn",
                        "productId": "cmgmgtaiz0000ms8nx0lgpgg2",
                        "quantity": 2,
                        "message": "Happy Birthday",
                        "unitPrice": 20000,
                        "totalPrice": 40000,
                        "product": {
                          "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                          "productCode": "PRD-F7MGMGTAIZ-7CBF4D",
                          "name": "Bloomboxa",
                          "price": 20000,
                          "isActive": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntityValidationErrorResponse": {
                    "$ref": "#/components/examples/UnprocessableEntityOrders"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/myrekap/{id}": {
      "get": {
        "tags": ["Orders MyRekap"],
        "summary": "Get order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/order-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Order retrieved by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGlobalResponse"
                },
                "example": {
                  "message": "Order retrieved successfully",
                  "data": {
                    "id": "cmgmyd6bm0001msisu6ksrbkm",
                    "orderCode": "ORD-31MGMYD6BL-41795C",
                    "userId": "cmgmg3v820000ms7cm1g7gz0i",
                    "customerName": "Budi",
                    "customerCategory": "UMUM",
                    "phoneNumber": "08123456789",
                    "deliveryOption": "DELIVERY",
                    "readyDate": "2025-08-28T00:00:00.000Z",
                    "shippingCost": 1000,
                    "deliveryAddress": "Jl. Mawar No. 12",
                    "totalPrice": 40000,
                    "paymentMethod": null,
                    "paymentStatus": "UNPAID",
                    "orderStatus": "IN_PROCESS",
                    "orderDate": "2025-10-12T00:15:05.026Z",
                    "items": [
                      {
                        "id": "cmgmyd6bm0003msis3uvo04r5",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm",
                        "productId": "cmgmgtaiz0000ms8nx0lgpgg2",
                        "quantity": 2,
                        "message": "Happy Birthday",
                        "unitPrice": 20000,
                        "totalPrice": 40000,
                        "product": {
                          "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                          "productCode": "PRD-F7MGMGTAIZ-7CBF4D",
                          "name": "Bloomboxa",
                          "price": 20000,
                          "isActive": true
                        }
                      }
                    ],
                    "images": [
                      {
                        "id": "cmgmyd6bm0004msism6v8mm8l",
                        "type": "PAYMENT_PROOF",
                        "fileName": "ORD-31MGMYD6BL-41795C-207.png",
                        "size": 629754,
                        "url": "/home/andev/Pictures/myrekap/bukti-pembayaran/ORD-31MGMYD6BL-41795C-207.png",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Order not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Orders MyRekap"],
        "summary": "Update order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/order-id"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": { "type": "string" },
                  "customerCategory": { "type": "string", "enum": ["UMUM", "PEMDA", "PERBANKAN"] },
                  "phoneNumber": { "type": "string" },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": { "type": "string" },
                        "quantity": { "type": "number" },
                        "message": { "type": "string" }
                      },
                      "required": ["productId", "quantity"]
                    },
                    "minItems": 1,
                    "description": "Minimum 1 item required"
                  },
                  "readyDate": { "type": "string" },
                  "deliveryOptions": { "type": "string", "enum": ["SELF_PICKUP", "DELIVERY"] },
                  "deliveryAddress": {
                    "type": "string",
                    "nullable": true,
                    "description": "Required if deliveryOption is DELIVERY"
                  },
                  "shippingCost": {
                    "type": "number",
                    "description": "Required if deliveryOption is DELIVERY"
                  },
                  "isPaid": { "type": "boolean" },
                  "paymentMethod": {
                    "type": "string",
                    "enum": ["BANK_TRANSFER", "CASH"],
                    "nullable": true,
                    "description": "Required when isPaid is true. Can be null when isPaid is false"
                  },
                  "paymentProof": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true,
                    "description": "Required when isPaid is true and paymentMethod is BANK_TRANSFER. Can be null when isPaid is false or paymentMethod is CASH. Max 2 MB."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGlobalResponse"
                },
                "example": {
                  "message": "Order created successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre",
                    "orderCode": "ORD-CMGKJJFZN-0000JXBA16EQLSRE",
                    "userId": "cmgkjjfzn0000jxba16eqlsre",
                    "customerName": "John Doe",
                    "customerCategory": "UMUM",
                    "phoneNumber": "+6281234567890",
                    "deliveryOptions": "DELIVERY",
                    "readyDate": "2023-01-01T00:00:00.000Z",
                    "shippingCost": 5000,
                    "deliveryAddress": "Jl. Contoh, Kota Contoh, Negara Contoh",
                    "totalPrice": 10000,
                    "paymentMethod": "BANK_TRANSFER",
                    "paymentStatus": "UNPAID",
                    "orderStatus": "IN_PROCESS",
                    "orderDate": "2023-01-01T00:00:00.000Z",
                    "items": [
                      {
                        "id": "cmgkjjfzn0000jxba16eqlsre",
                        "productId": "cmgkjjfzn0000jxba16eqlsre",
                        "quantity": 2,
                        "message": "Pesan tambahan"
                      }
                    ],
                    "images": [
                      {
                        "id": "cmgmyd6bm0004msism6v8mm8l",
                        "type": "PAYMENT_PROOF",
                        "fileName": "ORD-31MGMYD6BL-41795C-207.png",
                        "size": 629754,
                        "url": "/home/andev/Pictures/myrekap/bukti-pembayaran/ORD-31MGMYD6BL-41795C-207.png",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Order not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntityValidationErrorResponse": {
                    "$ref": "#/components/examples/UnprocessableEntityOrders"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/myrekap/{id}/progress": {
      "patch": {
        "tags": ["Orders MyRekap"],
        "summary": "Update order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/order-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string" },
                  "finishedProduct": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGlobalResponse"
                },
                "example": {
                  "message": "Update order status successfully",
                  "data": {
                    "id": "cmgmyd6bm0001msisu6ksrbkm",
                    "orderCode": "ORD-31MGMYD6BL-41795C",
                    "userId": "cmgmg3v820000ms7cm1g7gz0i",
                    "customerName": "Budi",
                    "customerCategory": "UMUM",
                    "phoneNumber": "08123456789",
                    "deliveryOption": "DELIVERY",
                    "readyDate": "2025-08-28T00:00:00.000Z",
                    "shippingCost": 1000,
                    "deliveryAddress": "Jl. Mawar No. 12",
                    "totalPrice": 40000,
                    "paymentMethod": null,
                    "paymentStatus": "UNPAID",
                    "orderStatus": "COMPLETED",
                    "orderDate": "2025-10-12T00:15:05.026Z",
                    "items": [
                      {
                        "id": "cmgmyd6bm0003msis3uvo04r5",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm",
                        "productId": "cmgmgtaiz0000ms8nx0lgpgg2",
                        "quantity": 2,
                        "message": "Happy Birthday",
                        "unitPrice": 20000,
                        "totalPrice": 40000,
                        "product": {
                          "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                          "productCode": "PRD-F7MGMGTAIZ-7CBF4D",
                          "name": "Bloomboxa",
                          "price": 20000,
                          "isActive": true
                        }
                      }
                    ],
                    "images": [
                      {
                        "id": "cmgmyd6bm0004msism6v8mm8l",
                        "type": "PAYMENT_PROOF",
                        "fileName": "ORD-31MGMYD6BL-41795C-207.png",
                        "size": 629754,
                        "url": "/home/andev/Pictures/myrekap/bukti-pembayaran/ORD-31MGMYD6BL-41795C-207.png",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Order not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },

    "/orders/myflower": {
      "get": {
        "tags": ["Orders MyFlower"],
        "summary": "Get all orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderGlobalResponse"
                      }
                    }
                  }
                },
                "example": {
                  "message": "Orders retrieved successfully",
                  "data": [
                    {
                      "id": "cmgkjs2vc0001jxw9egx3gms3",
                      "orderCode": "ORD-BEMGKJS2V9-53537C",
                      "userId": "cmgkjjfzn0000jxba16eqlsre",
                      "customerName": "Ronaldo",
                      "customerCategory": "PEMDA",
                      "phoneNumber": "08975836972",
                      "deliveryOption": "SELF_PICKUP",
                      "readyDate": "2025-10-11T08:00:00.000Z",
                      "shippingCost": 0,
                      "deliveryAddress": null,
                      "totalPrice": 1200,
                      "paymentMethod": null,
                      "paymentStatus": "UNPAID",
                      "orderStatus": "IN_PROCESS",
                      "orderDate": "2025-10-10T07:51:13.800Z",
                      "items": [
                        {
                          "id": "cmgkjs2vd0003jxw92e4ut75n",
                          "orderId": "cmgkjs2vc0001jxw9egx3gms3",
                          "productId": "cmgkjlq3t0001jxbav0d6hvur",
                          "quantity": 1,
                          "message": null,
                          "unitPrice": 1200,
                          "totalPrice": 1200,
                          "product": {
                            "id": "cmgkjlq3t0001jxbav0d6hvur",
                            "productCode": "PRD-01MGKJLQ3R-AB4E97",
                            "name": "Bouquet",
                            "price": 1200,
                            "isActive": true
                          }
                        }
                      ],
                      "images": []
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Orders MyFlower"],
        "summary": "Create a new order",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": { "type": "string" },
                  "customerCategory": { "type": "string", "enum": ["UMUM", "PEMDA", "PERBANKAN"] },
                  "phoneNumber": { "type": "string" },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": { "type": "string" },
                        "quantity": { "type": "number" },
                        "message": { "type": "string" }
                      },
                      "required": ["productId", "quantity"]
                    },
                    "minItems": 1,
                    "description": "Minimum 1 item required"
                  },
                  "readyDate": { "type": "string" },
                  "deliveryOptions": { "type": "string", "enum": ["SELF_PICKUP", "DELIVERY"] },
                  "deliveryAddress": {
                    "type": "string",
                    "nullable": true,
                    "description": "Required when deliveryOption is DELIVERY"
                  },
                  "shippingCost": {
                    "type": "number",
                    "default": 0,
                    "description": "Required when deliveryOption is DELIVERY"
                  },
                  "isPaid": { "type": "boolean", "default": false },
                  "paymentMethod": {
                    "type": "string",
                    "enum": ["BANK_TRANSFER", "CASH"],
                    "nullable": true,
                    "description": "Required when isPaid is true. Can be null when isPaid is false"
                  },
                  "paymentProof": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true,
                    "description": "Required when isPaid is true and paymentMethod is BANK_TRANSFER. Can be null when isPaid is false or paymentMethod is CASH. Max 2 MB."
                  }
                },
                "required": [
                  "customerName",
                  "customerCategory",
                  "phoneNumber",
                  "items",
                  "deliveryOptions",
                  "readyDate",
                  "isPaid"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "orderCode": { "type": "string" },
                    "userId": { "type": "string" },
                    "customerName": { "type": "string" },
                    "customerCategory": {
                      "type": "string",
                      "enum": ["UMUM", "PEMDA", "PERBANKAN"]
                    },
                    "phoneNumber": { "type": "string" },
                    "deliveryOptions": { "type": "string", "enum": ["SELF_PICKUP", "DELIVERY"] },
                    "readyDate": { "type": "string" },
                    "shippingCost": { "type": "number" },
                    "deliveryAddress": { "type": "string" },
                    "totalPrice": { "type": "number" },
                    "paymentMethod": {
                      "type": "string",
                      "enum": ["BANK_TRANSFER", "CASH_ON_DELIVERY"]
                    },
                    "paymentStatus": { "type": "string", "enum": ["PAID", "UNPAID"] },
                    "orderStatus": {
                      "type": "string",
                      "enum": ["IN_PROCESS", "COMPLETED", "CANCELLED"]
                    },
                    "orderDate": { "type": "string" },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderItem"
                      }
                    }
                  }
                },
                "example": {
                  "message": "Order created successfully",
                  "data": {
                    "id": "cmgncy7tr0001msxafnyxd4dn",
                    "orderCode": "ORD-4AMGNCY7TR-BA9427",
                    "userId": "cmgmg3v820000ms7cm1g7gz0i",
                    "customerName": "Budi",
                    "customerCategory": "UMUM",
                    "phoneNumber": "08123456789",
                    "deliveryOption": "DELIVERY",
                    "readyDate": "2025-08-28T00:00:00.000Z",
                    "shippingCost": 1000,
                    "deliveryAddress": "Jl. Mawar No. 12",
                    "totalPrice": 40000,
                    "paymentMethod": "BANK_TRANSFER",
                    "paymentStatus": "PAID",
                    "orderStatus": "IN_PROCESS",
                    "orderDate": "2025-10-12T07:03:21.376Z",
                    "items": [
                      {
                        "id": "cmgncy7tr0003msxagdfg9cd0",
                        "orderId": "cmgncy7tr0001msxafnyxd4dn",
                        "productId": "cmgmgtaiz0000ms8nx0lgpgg2",
                        "quantity": 2,
                        "message": "Happy Birthday",
                        "unitPrice": 20000,
                        "totalPrice": 40000,
                        "product": {
                          "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                          "productCode": "PRD-F7MGMGTAIZ-7CBF4D",
                          "name": "Bloomboxa",
                          "price": 20000,
                          "isActive": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntityValidationErrorResponse": {
                    "$ref": "#/components/examples/UnprocessableEntityOrders"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/myflower/{id}": {
      "get": {
        "tags": ["Orders MyFlower"],
        "summary": "Get order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/order-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Order retrieved by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGlobalResponse"
                },
                "example": {
                  "message": "Order retrieved successfully",
                  "data": {
                    "id": "cmgmyd6bm0001msisu6ksrbkm",
                    "orderCode": "ORD-31MGMYD6BL-41795C",
                    "userId": "cmgmg3v820000ms7cm1g7gz0i",
                    "customerName": "Budi",
                    "customerCategory": "UMUM",
                    "phoneNumber": "08123456789",
                    "deliveryOption": "DELIVERY",
                    "readyDate": "2025-08-28T00:00:00.000Z",
                    "shippingCost": 1000,
                    "deliveryAddress": "Jl. Mawar No. 12",
                    "totalPrice": 40000,
                    "paymentMethod": null,
                    "paymentStatus": "UNPAID",
                    "orderStatus": "IN_PROCESS",
                    "orderDate": "2025-10-12T00:15:05.026Z",
                    "items": [
                      {
                        "id": "cmgmyd6bm0003msis3uvo04r5",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm",
                        "productId": "cmgmgtaiz0000ms8nx0lgpgg2",
                        "quantity": 2,
                        "message": "Happy Birthday",
                        "unitPrice": 20000,
                        "totalPrice": 40000,
                        "product": {
                          "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                          "productCode": "PRD-F7MGMGTAIZ-7CBF4D",
                          "name": "Bloomboxa",
                          "price": 20000,
                          "isActive": true
                        }
                      }
                    ],
                    "images": [
                      {
                        "id": "cmgmyd6bm0004msism6v8mm8l",
                        "type": "PAYMENT_PROOF",
                        "fileName": "ORD-31MGMYD6BL-41795C-207.png",
                        "size": 629754,
                        "url": "/home/andev/Pictures/myrekap/bukti-pembayaran/ORD-31MGMYD6BL-41795C-207.png",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Order not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },
    "/orders/myflower/{id}/{status}": {
      "patch": {
        "tags": ["Orders MyFlower"],
        "summary": "Update order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/order-id"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": { "type": "string" },
                  "customerCategory": { "type": "string", "enum": ["UMUM", "PEMDA", "PERBANKAN"] },
                  "phoneNumber": { "type": "string" },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": { "type": "string" },
                        "quantity": { "type": "number" },
                        "message": { "type": "string" }
                      },
                      "required": ["productId", "quantity"]
                    },
                    "minItems": 1,
                    "description": "Minimum 1 item required"
                  },
                  "readyDate": { "type": "string" },
                  "deliveryOptions": { "type": "string", "enum": ["SELF_PICKUP", "DELIVERY"] },
                  "deliveryAddress": {
                    "type": "string",
                    "nullable": true,
                    "description": "Required if deliveryOption is DELIVERY"
                  },
                  "shippingCost": {
                    "type": "number",
                    "description": "Required if deliveryOption is DELIVERY"
                  },
                  "isPaid": { "type": "boolean" },
                  "paymentMethod": {
                    "type": "string",
                    "enum": ["BANK_TRANSFER", "CASH"],
                    "nullable": true,
                    "description": "Required when isPaid is true. Can be null when isPaid is false"
                  },
                  "paymentProof": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true,
                    "description": "Required when isPaid is true and paymentMethod is BANK_TRANSFER. Can be null when isPaid is false or paymentMethod is CASH. Max 2 MB."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGlobalResponse"
                },
                "example": {
                  "message": "Order created successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre",
                    "orderCode": "ORD-CMGKJJFZN-0000JXBA16EQLSRE",
                    "userId": "cmgkjjfzn0000jxba16eqlsre",
                    "customerName": "John Doe",
                    "customerCategory": "UMUM",
                    "phoneNumber": "+6281234567890",
                    "deliveryOptions": "DELIVERY",
                    "readyDate": "2023-01-01T00:00:00.000Z",
                    "shippingCost": 5000,
                    "deliveryAddress": "Jl. Contoh, Kota Contoh, Negara Contoh",
                    "totalPrice": 10000,
                    "paymentMethod": "BANK_TRANSFER",
                    "paymentStatus": "UNPAID",
                    "orderStatus": "IN_PROCESS",
                    "orderDate": "2023-01-01T00:00:00.000Z",
                    "items": [
                      {
                        "id": "cmgkjjfzn0000jxba16eqlsre",
                        "productId": "cmgkjjfzn0000jxba16eqlsre",
                        "quantity": 2,
                        "message": "Pesan tambahan"
                      }
                    ],
                    "images": [
                      {
                        "id": "cmgmyd6bm0004msism6v8mm8l",
                        "type": "PAYMENT_PROOF",
                        "fileName": "ORD-31MGMYD6BL-41795C-207.png",
                        "size": 629754,
                        "url": "/home/andev/Pictures/myrekap/bukti-pembayaran/ORD-31MGMYD6BL-41795C-207.png",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Order not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntityValidationErrorResponse": {
                    "$ref": "#/components/examples/UnprocessableEntityOrders"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/myflower/{orderCode}": {
      "delete": {
        "tags": ["Orders MyFlower"],
        "summary": "Update order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/order-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string" },
                  "finishedProduct": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGlobalResponse"
                },
                "example": {
                  "message": "Update order status successfully",
                  "data": {
                    "id": "cmgmyd6bm0001msisu6ksrbkm",
                    "orderCode": "ORD-31MGMYD6BL-41795C",
                    "userId": "cmgmg3v820000ms7cm1g7gz0i",
                    "customerName": "Budi",
                    "customerCategory": "UMUM",
                    "phoneNumber": "08123456789",
                    "deliveryOption": "DELIVERY",
                    "readyDate": "2025-08-28T00:00:00.000Z",
                    "shippingCost": 1000,
                    "deliveryAddress": "Jl. Mawar No. 12",
                    "totalPrice": 40000,
                    "paymentMethod": null,
                    "paymentStatus": "UNPAID",
                    "orderStatus": "COMPLETED",
                    "orderDate": "2025-10-12T00:15:05.026Z",
                    "items": [
                      {
                        "id": "cmgmyd6bm0003msis3uvo04r5",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm",
                        "productId": "cmgmgtaiz0000ms8nx0lgpgg2",
                        "quantity": 2,
                        "message": "Happy Birthday",
                        "unitPrice": 20000,
                        "totalPrice": 40000,
                        "product": {
                          "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                          "productCode": "PRD-F7MGMGTAIZ-7CBF4D",
                          "name": "Bloomboxa",
                          "price": 20000,
                          "isActive": true
                        }
                      }
                    ],
                    "images": [
                      {
                        "id": "cmgmyd6bm0004msism6v8mm8l",
                        "type": "PAYMENT_PROOF",
                        "fileName": "ORD-31MGMYD6BL-41795C-207.png",
                        "size": 629754,
                        "url": "/home/andev/Pictures/myrekap/bukti-pembayaran/ORD-31MGMYD6BL-41795C-207.png",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Session Expired": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Order not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },

    "/transactions/create": {
      "post": { "tags": ["Transactions"], "responses": { "200": { "description": "" } } }
    },
    "/transactions/:orderCode/cancel": {
      "post": { "tags": ["Transactions"], "responses": { "200": { "description": "" } } }
    },
    "/transactions/:orderCode/refund": {
      "post": { "tags": ["Transactions"], "responses": { "200": { "description": "" } } }
    },
    "/transactions/:orderCode/expire": {
      "post": { "tags": ["Transactions"], "responses": { "200": { "description": "" } } }
    }
  },

  "components": {
    "parameters": {
      "x-app-name": {
        "name": "x-app-name",
        "in": "header",
        "description": "Application name used to match the cookie token (token_{x-app-name}) for authentication.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "MyRekap": {
            "value": "myrekap"
          },
          "MyFlower": {
            "value": "myflower"
          }
        }
      },
      "user-id": {
        "name": "id",
        "in": "path",
        "description": "ID of the user",
        "required": true,
        "schema": {
          "type": "string",
          "example": "cmgkjjfzn0000jxba16eqlsre"
        }
      },
      "product-id": {
        "name": "id",
        "in": "path",
        "description": "ID of the product",
        "required": true,
        "schema": {
          "type": "string",
          "example": "cmgmgtaiz0000ms8nx0lgpgg2"
        }
      },
      "order-id": {
        "name": "id",
        "in": "path",
        "description": "ID of the order",
        "required": true,
        "schema": {
          "type": "string",
          "example": "cmgmyd6bm0001msisu6ksrbkm"
        }
      }
    },
    "securitySchemes": {
      "BearerResetToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT for password reset. Obtain this token from the response of POST /auth/otp/verify with type \"reset_password\" in the field \"resetToken\". Send it via header: Authorization: Bearer {resetToken}."
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errorCode": {
            "type": "integer"
          },
          "errors": {
            "type": "array",
            "nullable": true,
            "items": {}
          }
        }
      },
      "VerifyOTPEmailVerificationResponse": {
        "type": "object",
        "description": "Response for successful email verification.",
        "properties": {
          "message": { "type": "string" },
          "data": {
            "type": "object",
            "properties": {
              "success": { "type": "boolean" },
              "type": { "type": "string", "enum": ["EMAIL_VERIFICATION"] },
              "data": {
                "type": "object",
                "properties": {
                  "fullName": { "type": "string" },
                  "role": { "type": "string", "enum": ["SUPERADMIN", "ADMIN", "CUSTOMER"] }
                }
              }
            }
          }
        }
      },
      "VerifyOTPPasswordResetResponse": {
        "type": "object",
        "description": "Response for successful password reset verification. The 'resetToken' field in the response should be used as the Bearer token for 'BearerResetToken' authentication.",
        "properties": {
          "message": { "type": "string" },
          "data": {
            "type": "object",
            "properties": {
              "success": { "type": "boolean" },
              "type": { "type": "string", "enum": ["PASSWORD_RESET"] },
              "resetToken": {
                "type": "string",
                "description": "JWT used for password reset authentication (BearerResetToken)."
              }
            }
          }
        }
      },
      "UserGlobalResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": { "type": "string" }
            }
          }
        }
      },
      "ProductGlobalResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": { "type": "string" }
            }
          }
        }
      },
      "MonthlyStockGeneral": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "productId": { "type": "string" },
                "month": { "type": "number" },
                "year": { "type": "number" },
                "initialStock": { "type": "number" },
                "stockIn": { "type": "number" },
                "stockOut": { "type": "number" },
                "finalStock": { "type": "number" },
                "createdAt": { "type": "string" },
                "product": {
                  "type": "object",
                  "properties": { "productCode": { "type": "string" }, "name": { "type": "string" } }
                }
              }
            }
          }
        }
      },
      "MonthlyStockDetail": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "productId": { "type": "string" },
                "type": { "type": "string", "enum": ["STOCK_IN", "STOCK_OUT"] },
                "quantity": { "type": "number" },
                "note": { "type": "string" },
                "createdAt": { "type": "string" },
                "product": {
                  "type": "object",
                  "properties": { "productCode": { "type": "string" }, "name": { "type": "string" } }
                }
              }
            }
          }
        }
      },
      "OrderGlobalResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "data": {
            "type": "object",
            "properties": {
              "id": { "type": "string" }
            }
          }
        }
      },
      "OrderGetAllResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "orderCode": { "type": "string" },
                "userId": { "type": "string" },
                "customerName": { "type": "string" },
                "customerCategory": { "type": "string", "enum": ["umum", "pemda", "perbankan"] },
                "phoneNumber": { "type": "string" },
                "deliveryOptions": { "type": "string", "enum": ["self_pickup", "delivery"] },
                "readyDate": { "type": "string" },
                "shippingCost": { "type": "number" },
                "deliveryAddress": { "type": "string" },
                "totalPrice": { "type": "number" },
                "paymentMethod": {
                  "type": "string",
                  "enum": ["cash", "bank_transfer", "cod", "credit_card", "cstore", "qris", "ewallet"]
                },
                "paymentStatus": {
                  "type": "string",
                  "enum": ["unpaid", "paid", "pending", "expired", "denied", "refunded"]
                },
                "orderStatus": { "type": "string", "enum": ["in_process", "completed", "canceled", "delivery"] },
                "orderDate": { "type": "string" },
                "items": {
                  "$ref": "#/components/schemas/OrderItem"
                },
                "images": {
                  "$ref": "#/components/schemas/OrderImage"
                }
              }
            }
          }
        }
      },
      "OrderItem": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "orderId": { "type": "string" },
            "productId": { "type": "string" },
            "quantity": { "type": "number" },
            "message": { "type": "string" },
            "unitPrice": { "type": "number" },
            "totalPrice": { "type": "number" },
            "product": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "productCode": { "type": "string" },
                "name": { "type": "string" },
                "price": { "type": "number" },
                "stock": { "type": "number" },
                "description": { "type": "string" },
                "isActive": { "type": "boolean" },
                "category": { "type": "string" },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "fileName": { "type": "string" },
                      "size": { "type": "number" },
                      "publicId": { "type": "string" },
                      "secureUrl": { "type": "string" },
                      "productId": { "type": "string" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "OrderImage": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string", "enum": ["PAYMENT_PROOF", "FINISHED_PRODUCT"] },
            "fileName": { "type": "string" },
            "size": { "type": "number" },
            "url": { "type": "string" },
            "orderId": { "type": "string" }
          }
        }
      }
    },
    "examples": {
      "MissingAppName": {
        "value": {
          "message": "Invalid or missing header: x-app-name. Allowed values are 'myrekap' or 'myflower'.",
          "errorCode": 2003,
          "errors": null
        }
      },
      "RequireMyRekapApp": {
        "value": {
          "message": "Invalid header. This endpoint is restricted to requests containing 'x-app-name: myrekap' header",
          "errorCode": 2006,
          "errors": null
        }
      },
      "RequireMyFlowerApp": {
        "value": {
          "message": "Invalid header. This endpoint is restricted to requests containing 'x-app-name: myflower' header",
          "errorCode": 2006,
          "errors": null
        }
      },
      "AccessDeniedMyRekap": {
        "summary": "Access denied, Superadmin and Admin only",
        "value": {
          "message": "Access denied. Only Superadmin and Admin can access MyRekap",
          "errorCode": 2002,
          "errors": null
        }
      },
      "AccessDeniedMyFlower": {
        "summary": "Access denied. Only Customer can access MyFlower",
        "value": {
          "message": "Access denied. Only Customer can access MyFlower",
          "errorCode": 2002,
          "errors": null
        }
      },
      "AccessDeniedSuperadminOnly": {
        "value": {
          "message": "Access denied. Only Superadmin has permission",
          "errorCode": 2002,
          "errors": null
        }
      },
      "UnauthorizedSessionExpiredResponse": {
        "value": {
          "message": "Your session has expired. Please log in again",
          "errorCode": 2001,
          "errors": null
        }
      },
      "UnprocessableEntityUsers": {
        "summary": "Unprocessable Entity Users",
        "value": {
          "message": "Invalid data",
          "errorCode": 8001,
          "errors": [
            {
              "validation": "email",
              "code": "invalid_string",
              "message": "Invalid email",
              "path": ["email"]
            }
          ]
        }
      },
      "UnprocessableEntityProducts": {
        "summary": "Unprocessable Entity Products",
        "value": {
          "message": "Invalid data",
          "errorCode": 8001,
          "errors": [
            {
              "code": "too_small",
              "minimum": 1,
              "type": "number",
              "inclusive": true,
              "exact": false,
              "message": "Price must be greater than 0",
              "path": ["price"]
            }
          ]
        }
      },
      "UnprocessableEntityOrders": {
        "summary": "Unprocessable Entity Orders",
        "value": {
          "message": "Invalid data",
          "errorCode": 8001,
          "errors": [
            {
              "path": ["deliveryAddress"],
              "code": "custom",
              "message": "Delivery address is required for delivery"
            }
          ]
        }
      },
      "UserAlreadyExists": {
        "value": {
          "message": "The username or email is already taken",
          "errorCode": 1004,
          "errors": null
        }
      }
    }
  }
}
