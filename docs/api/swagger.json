{
  "openapi": "3.0.3",
  "info": {
    "title": "MyRekap API Documentation",
    "description": "MyRekap API provides endpoints to manage users, products, orders, and other operations. All endpoints require authentication via JWT. There are two roles: `superadmin` with full access and `admin` with limited access. This documentation covers all available routes, request parameters, response formats, and authentication requirements.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:{port}/api/v1",
      "description": "Local server",
      "variables": {
        "port": {
          "default": "5000"
        }
      }
    }
  ],

  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User Login",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "username": "johndoe",
                "password": "223344"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGlobalResponse"
                },
                "examples": {
                  "Login Successfully": {
                    "value": {
                      "message": "Login successfully",
                      "data": {
                        "appName": "myrekap",
                        "fullName": "John Doe",
                        "username": "johndoe"
                      }
                    }
                  },
                  "Account Not Verified": {
                    "value": {
                      "message": "Account not verified. OTP has been sent to your email",
                      "data": {
                        "needVerification": true,
                        "email": "johndoe@mail.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized - Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "AccessDeniedMyRekap": {
                    "$ref": "#/components/examples/AccessDeniedMyRekap"
                  },
                  "AccessDeniedMyFlower": {
                    "$ref": "#/components/examples/AccessDeniedMyFlower"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "User not found",
                  "errorCode": 404,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User Logout",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Logout successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register New Customer (MyFlower Only)",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": { "type": "string" },
                  "username": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "phoneNumber": { "type": "string" },
                  "customerCategory": { "type": "string", "enum": ["umum", "pemda", "perbankan"] },
                  "password": { "type": "string" },
                  "confPassword": { "type": "string" }
                },
                "required": [
                  "fullName",
                  "username",
                  "email",
                  "phoneNumber",
                  "customerCategory",
                  "password",
                  "confPassword"
                ]
              },
              "example": {
                "fullName": "John Doe",
                "username": "johndoe",
                "email": "johndoe@mail.com",
                "phoneNumber": "08123456789",
                "customerCategory": "umum",
                "password": "223344",
                "confPassword": "223344"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGlobalResponse"
                },
                "example": {
                  "message": "Registration successful. Please verify your email using the OTP code sent"
                }
              }
            }
          },
          "400": {
            "description": "Bad RequestS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "User Already Exists": {
                    "$ref": "#/components/examples/UserAlreadyExists"
                  },
                  "Require MyFlower App": {
                    "$ref": "#/components/examples/RequireMyFlowerApp"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntity": {
                    "$ref": "#/components/examples/UnprocessableEntityUsers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-auth": {
      "get": {
        "tags": ["Authentication"],
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "summary": "Verify User Authentication",
        "responses": {
          "200": {
            "description": "Verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Verification successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/otp/resend": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Resend OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["email_verification", "password_reset"]
                  }
                },
                "required": ["email", "type"]
              },
              "examples": {
                "Resend OTP Email Verification": {
                  "value": {
                    "email": "johndoe@example.com",
                    "type": "email_verification"
                  }
                },
                "Resend OTP Password Reset": {
                  "value": {
                    "email": "johndoe@example.com",
                    "type": "password_reset"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP resent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Resend OTP Email Verification": {
                    "value": {
                      "message": "Resend user otp successfully"
                    }
                  },
                  "Account Not Verified (Reset Password)": {
                    "value": {
                      "message": "Account not verified. OTP has been sent to your email",
                      "data": {
                        "needVerification": true,
                        "email": "johndoe@mail.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  },
                  "Too Many Requests": {
                    "value": {
                      "message": "Too many requests, please try again later.",
                      "errorCode": 1008,
                      "errors": null
                    }
                  },
                  "User Not Found": {
                    "value": {
                      "message": "User not found",
                      "errorCode": 404,
                      "errors": null
                    }
                  },
                  "Email Already Verified - Email Verification": {
                    "value": {
                      "message": "Email already verified",
                      "errorCode": 4001,
                      "errors": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/otp/verify": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["email_verification", "password_reset"]
                  },
                  "otp": {
                    "type": "string"
                  }
                },
                "required": ["email", "otp", "type"]
              },
              "examples": {
                "Verify OTP Email Verification": {
                  "value": {
                    "email": "johndoe@mail.com",
                    "type": "email_verification",
                    "otp": "123456"
                  }
                },
                "Verify OTP Password Reset": {
                  "value": {
                    "email": "johndoe@mail.com",
                    "type": "password_reset",
                    "otp": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/VerifyOTPEmailVerificationResponse" },
                    { "$ref": "#/components/schemas/VerifyOTPPasswordResetResponse" }
                  ]
                },
                "examples": {
                  "Verify OTP Email Verification": {
                    "value": {
                      "message": "Verify user otp successfully",
                      "data": {
                        "success": true,
                        "type": "EMAIL_VERIFICATION",
                        "data": {
                          "fullName": "John Doe",
                          "role": "SUPERADMIN"
                        }
                      }
                    }
                  },
                  "Verify OTP Password Reset": {
                    "value": {
                      "message": "Verify user otp successfully",
                      "data": {
                        "success": true,
                        "type": "PASSWORD_RESET",
                        "resetToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjbWdrampmem4wMDAwamJ4YTE2ZXFsc3JlIiwiaWF0IjoxNjg4NzI1MTI0LCJleHAiOjE2ODg3MjYwMjR9.dV8Hk7mQ1pXnXGmYc1bXq8jv0nV7y5v3hX9Zz5Zz5Y"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing AppName": {
                    "$ref": "#/components/examples/MissingAppName"
                  },
                  "Invalid Or Expired OTP": {
                    "value": {
                      "message": "Invalid or expired otp",
                      "errorCode": 2003,
                      "errors": null
                    }
                  },
                  "User Not Found": {
                    "value": {
                      "message": "User not found",
                      "errorCode": 1001,
                      "errors": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "patch": {
        "tags": ["Authentication"],
        "summary": "Reset User Password",
        "security": [{ "BearerResetToken": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "confPassword": {
                    "type": "string"
                  }
                },
                "required": ["password", "confPassword"]
              },
              "examples": {
                "Reset Password": {
                  "value": {
                    "password": "123456",
                    "confPassword": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Password reset successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Missing or Invalid Reset Token": {
                    "value": {
                      "message": "Missing or invalid resetToken",
                      "errorCode": 2004,
                      "errors": null
                    }
                  },
                  "Invalid Token Type": {
                    "value": {
                      "message": "Invalid token type",
                      "errorCode": 2004,
                      "errors": null
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "User Not Found": {
                    "value": {
                      "message": "User not found",
                      "errorCode": 1001,
                      "errors": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get All Users (Superadmin Only)",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "userCode": { "type": "string" },
                          "username": { "type": "string" },
                          "email": { "type": "string" },
                          "role": { "type": "string" },
                          "isVerified": { "type": "boolean" }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "User retrieved successfully",
                  "data": [
                    {
                      "id": "cmgkjjfzn0000jxba16eqlsre",
                      "userCode": "USR-0DMGKJJFZK-D3983C",
                      "username": "johndoe",
                      "email": "johndoe@mail.com",
                      "role": "SUPERADMIN",
                      "isVerified": true
                    },
                    {
                      "id": "cmglpufs4000gjxnuvbv80fae",
                      "userCode": "USR-ADMGLPUFS3-350860",
                      "username": "johnson",
                      "email": "johnson@mail.com",
                      "role": "ADMIN",
                      "isVerified": false
                    },
                    {
                      "id": "cmglpux5j000hjxnu62r8gayh",
                      "userCode": "USR-8EMGLPUX5H-8DAC93",
                      "username": "janesmith",
                      "email": "janesmith@mail.com",
                      "role": "ADMIN",
                      "isVerified": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access denied, Superadmin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "AccessDeniedSuperadminOnly": {
                    "$ref": "#/components/examples/AccessDeniedSuperadminOnly"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create New User (Superadmin Only)",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" },
                  "confPassword": { "type": "string" }
                },
                "required": ["username", "email", "password", "confPassword"]
              },
              "example": {
                "username": "newuser",
                "email": "newuser@example.com",
                "password": "123456",
                "confPassword": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGlobalResponse"
                },
                "example": {
                  "message": "User created successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre",
                    "userCode": "USR-0DMGKJJFZK-D3983C",
                    "username": "johndoe",
                    "email": "johndoe@mail.com",
                    "role": "SUPERADMIN",
                    "isVerified": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UserAlreadyExists": {
                    "$ref": "#/components/examples/UserAlreadyExists"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access denied, Superadmin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "AccessDeniedSuperadminOnly": {
                    "$ref": "#/components/examples/AccessDeniedSuperadminOnly"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntity": {
                    "$ref": "#/components/examples/UnprocessableEntityUsers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "tags": ["Users"],
        "summary": "Update User by ID (Superadmin Only)",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/user-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "description": "No password change",
                    "type": "object",
                    "properties": {
                      "username": { "type": "string" },
                      "email": { "type": "string", "format": "email" }
                    }
                  },
                  {
                    "description": "Password change (both required)",
                    "type": "object",
                    "properties": {
                      "username": { "type": "string" },
                      "email": { "type": "string", "format": "email" },
                      "password": { "type": "string" },
                      "confPassword": { "type": "string" }
                    },
                    "required": ["password", "confPassword"]
                  }
                ]
              },

              "example": {
                "username": "johndoe",
                "email": "johndoe@mail.com",
                "password": "123456",
                "confPassword": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGlobalResponse"
                },
                "example": {
                  "message": "User update successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre",
                    "userCode": "USR-0DMGKJJFZK-D3983C",
                    "username": "johndoe",
                    "email": "johndoe@mail.com",
                    "role": "SUPERADMIN",
                    "isVerified": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Username or email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UsernameOrEmailAlreadyExists": {
                    "value": {
                      "message": "The username or email is already taken",
                      "errorCode": 1004,
                      "errors": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access denied, Superadmin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "AccessDeniedSuperadminOnly": {
                    "$ref": "#/components/examples/AccessDeniedSuperadminOnly"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "User not found",
                  "errorCode": 1001,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntity": {
                    "$ref": "#/components/examples/UnprocessableEntityUsers"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete User by ID (Superadmin Only)",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/user-id"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGlobalResponse"
                },
                "example": {
                  "message": "User deleted successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre",
                    "userCode": "USR-0DMGKJJFZK-D3983C",
                    "username": "johndoe",
                    "email": "johndoe@mail.com",
                    "role": "SUPERADMIN",
                    "isVerified": true
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access denied, Superadmin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "AccessDeniedSuperadminOnly": {
                    "$ref": "#/components/examples/AccessDeniedSuperadminOnly"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UserNotFound": {
                    "value": {
                      "message": "User not found",
                      "errorCode": 1001,
                      "errors": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "productCode": { "type": "string" },
                          "name": { "type": "string" },
                          "price": { "type": "number" },
                          "isActive": { "type": "boolean" }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Products retrieved successfully",
                  "data": [
                    {
                      "id": "cmgkjjfzn0000jxba16eqlsre",
                      "productCode": "PRD-0DMGKJJFZK-D3983C",
                      "name": "Product A",
                      "price": 1000,
                      "isActive": true
                    },
                    {
                      "id": "cmgkjjfzn0000jxba16eqlsre",
                      "productCode": "PRD-0DMGKJJFZK-D3983C",
                      "name": "Product B",
                      "price": 2000,
                      "isActive": true
                    },
                    {
                      "id": "cmgkjjfzn0000jxba16eqlsre",
                      "productCode": "PRD-0DMGKJJFZK-D3983C",
                      "name": "Product C",
                      "price": 3000,
                      "isActive": true
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "price": { "type": "number" },
                  "isActive": { "type": "boolean", "default": true }
                },
                "required": ["name", "price", "isActive"]
              },
              "example": {
                "name": "Product A",
                "price": 1000,
                "isActive": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGlobalResponse"
                },
                "example": {
                  "message": "Product created successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre",
                    "productCode": "PRD-0DMGKJJFZK-D3983C",
                    "name": "Product A",
                    "price": 1000,
                    "isActive": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product name already exists",
                  "errorCode": 4004,
                  "errors": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntityResponse": {
                    "$ref": "#/components/examples/UnprocessableEntityProducts"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "put": {
        "tags": ["Products"],
        "summary": "Update product by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/product-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "price": { "type": "number" },
                  "isActive": { "type": "boolean" }
                }
              },
              "example": {
                "name": "Product D",
                "price": 15000,
                "isActive": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGlobalResponse"
                },
                "example": {
                  "message": "Product updated successfully",
                  "data": {
                    "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                    "productCode": "PRD-E3MGM54LDQ-2B5C0D",
                    "name": "Product D",
                    "price": 15000,
                    "isActive": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntityResponse": {
                    "$ref": "#/components/examples/UnprocessableEntityProducts"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete product by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/product-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGlobalResponse"
                },
                "example": {
                  "message": "Product deleted successfully",
                  "data": {
                    "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                    "productCode": "PRD-E3MGM54LDQ-2B5C0D",
                    "name": "Product A",
                    "price": 15000,
                    "isActive": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get all orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderGlobalResponse"
                      }
                    }
                  }
                },
                "example": {
                  "message": "Orders retrieved successfully",
                  "data": [
                    {
                      "id": "cmgkxwr290001jx9dpmujxnu9",
                      "orderCode": "ORD-9BMGKXWR25-15065B",
                      "userId": "cmgkjjfzn0000jxba16eqlsre",
                      "customerName": "sasi",
                      "customerCategory": "PEMDA",
                      "phoneNumber": "08975836972",
                      "deliveryOption": "SELF_PICKUP",
                      "readyDate": "2025-10-11T05:45:00.000Z",
                      "shippingCost": 0,
                      "deliveryAddress": null,
                      "totalPrice": 1200,
                      "paymentMethod": "BANK_TRANSFER",
                      "paymentStatus": "PAID",
                      "orderStatus": "IN_PROCESS",
                      "orderDate": "2025-10-10T14:26:46.401Z",
                      "items": [
                        {
                          "id": "cmgkxwr290003jx9dusqjglje",
                          "orderId": "cmgkxwr290001jx9dpmujxnu9",
                          "productId": "cmgkjlq3t0001jxbav0d6hvur",
                          "quantity": 1,
                          "message": null,
                          "unitPrice": 1200,
                          "totalPrice": 1200,
                          "product": {
                            "id": "cmgkjlq3t0001jxbav0d6hvur",
                            "productCode": "PRD-01MGKJLQ3R-AB4E97",
                            "name": "Bouquet",
                            "price": 1200,
                            "isActive": true
                          }
                        }
                      ],
                      "images": [
                        {
                          "id": "cmgkxwr290004jx9d0spr8q6h",
                          "type": "PAYMENT_PROOF",
                          "fileName": "ORD-9BMGKXWR25-15065B-670.png",
                          "size": 1838,
                          "url": "/home/andev/Pictures/myrekap/bukti-pembayaran/ORD-9BMGKXWR25-15065B-670.png",
                          "orderId": "cmgkxwr290001jx9dpmujxnu9"
                        }
                      ]
                    },
                    {
                      "id": "cmgkjs2vc0001jxw9egx3gms3",
                      "orderCode": "ORD-BEMGKJS2V9-53537C",
                      "userId": "cmgkjjfzn0000jxba16eqlsre",
                      "customerName": "Ronaldo",
                      "customerCategory": "PEMDA",
                      "phoneNumber": "08975836972",
                      "deliveryOption": "SELF_PICKUP",
                      "readyDate": "2025-10-11T08:00:00.000Z",
                      "shippingCost": 0,
                      "deliveryAddress": null,
                      "totalPrice": 1200,
                      "paymentMethod": null,
                      "paymentStatus": "UNPAID",
                      "orderStatus": "IN_PROCESS",
                      "orderDate": "2025-10-10T07:51:13.800Z",
                      "items": [
                        {
                          "id": "cmgkjs2vd0003jxw92e4ut75n",
                          "orderId": "cmgkjs2vc0001jxw9egx3gms3",
                          "productId": "cmgkjlq3t0001jxbav0d6hvur",
                          "quantity": 1,
                          "message": null,
                          "unitPrice": 1200,
                          "totalPrice": 1200,
                          "product": {
                            "id": "cmgkjlq3t0001jxbav0d6hvur",
                            "productCode": "PRD-01MGKJLQ3R-AB4E97",
                            "name": "Bouquet",
                            "price": 1200,
                            "isActive": true
                          }
                        }
                      ],
                      "images": []
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": { "type": "string" },
                  "customerCategory": { "type": "string", "enum": ["UMUM", "PEMDA", "PERBANKAN"] },
                  "phoneNumber": { "type": "string" },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": { "type": "string" },
                        "quantity": { "type": "number" },
                        "message": { "type": "string" }
                      },
                      "required": ["productId", "quantity"]
                    },
                    "minItems": 1,
                    "description": "Minimum 1 item required"
                  },
                  "readyDate": { "type": "string" },
                  "deliveryOptions": { "type": "string", "enum": ["SELF_PICKUP", "DELIVERY"] },
                  "deliveryAddress": {
                    "type": "string",
                    "nullable": true,
                    "description": "Required when deliveryOption is DELIVERY"
                  },
                  "shippingCost": {
                    "type": "number",
                    "default": 0,
                    "description": "Required when deliveryOption is DELIVERY"
                  },
                  "isPaid": { "type": "boolean", "default": false },
                  "paymentMethod": {
                    "type": "string",
                    "enum": ["BANK_TRANSFER", "CASH"],
                    "nullable": true,
                    "description": "Required when isPaid is true. Can be null when isPaid is false"
                  },
                  "paymentProof": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true,
                    "description": "Required when isPaid is true and paymentMethod is BANK_TRANSFER. Can be null when isPaid is false or paymentMethod is CASH. Max 2 MB."
                  }
                },
                "required": [
                  "customerName",
                  "customerCategory",
                  "phoneNumber",
                  "items",
                  "deliveryOptions",
                  "readyDate",
                  "isPaid"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "orderCode": { "type": "string" },
                    "userId": { "type": "string" },
                    "customerName": { "type": "string" },
                    "customerCategory": {
                      "type": "string",
                      "enum": ["UMUM", "PEMDA", "PERBANKAN"]
                    },
                    "phoneNumber": { "type": "string" },
                    "deliveryOptions": { "type": "string", "enum": ["SELF_PICKUP", "DELIVERY"] },
                    "readyDate": { "type": "string" },
                    "shippingCost": { "type": "number" },
                    "deliveryAddress": { "type": "string" },
                    "totalPrice": { "type": "number" },
                    "paymentMethod": {
                      "type": "string",
                      "enum": ["BANK_TRANSFER", "CASH_ON_DELIVERY"]
                    },
                    "paymentStatus": { "type": "string", "enum": ["PAID", "UNPAID"] },
                    "orderStatus": {
                      "type": "string",
                      "enum": ["IN_PROCESS", "COMPLETED", "CANCELLED"]
                    },
                    "orderDate": { "type": "string" },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderItem"
                      }
                    }
                  }
                },
                "example": {
                  "message": "Order created successfully",
                  "data": {
                    "id": "cmgncy7tr0001msxafnyxd4dn",
                    "orderCode": "ORD-4AMGNCY7TR-BA9427",
                    "userId": "cmgmg3v820000ms7cm1g7gz0i",
                    "customerName": "Budi",
                    "customerCategory": "UMUM",
                    "phoneNumber": "08123456789",
                    "deliveryOption": "DELIVERY",
                    "readyDate": "2025-08-28T00:00:00.000Z",
                    "shippingCost": 1000,
                    "deliveryAddress": "Jl. Mawar No. 12",
                    "totalPrice": 40000,
                    "paymentMethod": "BANK_TRANSFER",
                    "paymentStatus": "PAID",
                    "orderStatus": "IN_PROCESS",
                    "orderDate": "2025-10-12T07:03:21.376Z",
                    "items": [
                      {
                        "id": "cmgncy7tr0003msxagdfg9cd0",
                        "orderId": "cmgncy7tr0001msxafnyxd4dn",
                        "productId": "cmgmgtaiz0000ms8nx0lgpgg2",
                        "quantity": 2,
                        "message": "Happy Birthday",
                        "unitPrice": 20000,
                        "totalPrice": 40000,
                        "product": {
                          "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                          "productCode": "PRD-F7MGMGTAIZ-7CBF4D",
                          "name": "Bloomboxa",
                          "price": 20000,
                          "isActive": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Product not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntityValidationErrorResponse": {
                    "$ref": "#/components/examples/UnprocessableEntityOrders"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/order-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Order retrieved by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGlobalResponse"
                },
                "example": {
                  "message": "Order retrieved successfully",
                  "data": {
                    "id": "cmgmyd6bm0001msisu6ksrbkm",
                    "orderCode": "ORD-31MGMYD6BL-41795C",
                    "userId": "cmgmg3v820000ms7cm1g7gz0i",
                    "customerName": "Budi",
                    "customerCategory": "UMUM",
                    "phoneNumber": "08123456789",
                    "deliveryOption": "DELIVERY",
                    "readyDate": "2025-08-28T00:00:00.000Z",
                    "shippingCost": 1000,
                    "deliveryAddress": "Jl. Mawar No. 12",
                    "totalPrice": 40000,
                    "paymentMethod": null,
                    "paymentStatus": "UNPAID",
                    "orderStatus": "IN_PROCESS",
                    "orderDate": "2025-10-12T00:15:05.026Z",
                    "items": [
                      {
                        "id": "cmgmyd6bm0003msis3uvo04r5",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm",
                        "productId": "cmgmgtaiz0000ms8nx0lgpgg2",
                        "quantity": 2,
                        "message": "Happy Birthday",
                        "unitPrice": 20000,
                        "totalPrice": 40000,
                        "product": {
                          "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                          "productCode": "PRD-F7MGMGTAIZ-7CBF4D",
                          "name": "Bloomboxa",
                          "price": 20000,
                          "isActive": true
                        }
                      }
                    ],
                    "images": [
                      {
                        "id": "cmgmyd6bm0004msism6v8mm8l",
                        "type": "PAYMENT_PROOF",
                        "fileName": "ORD-31MGMYD6BL-41795C-207.png",
                        "size": 629754,
                        "url": "/home/andev/Pictures/myrekap/bukti-pembayaran/ORD-31MGMYD6BL-41795C-207.png",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Order not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Orders"],
        "summary": "Update order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/order-id"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerName": { "type": "string" },
                  "customerCategory": { "type": "string", "enum": ["UMUM", "PEMDA", "PERBANKAN"] },
                  "phoneNumber": { "type": "string" },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": { "type": "string" },
                        "quantity": { "type": "number" },
                        "message": { "type": "string" }
                      },
                      "required": ["productId", "quantity"]
                    },
                    "minItems": 1,
                    "description": "Minimum 1 item required"
                  },
                  "readyDate": { "type": "string" },
                  "deliveryOptions": { "type": "string", "enum": ["SELF_PICKUP", "DELIVERY"] },
                  "deliveryAddress": {
                    "type": "string",
                    "nullable": true,
                    "description": "Required if deliveryOption is DELIVERY"
                  },
                  "shippingCost": {
                    "type": "number",
                    "description": "Required if deliveryOption is DELIVERY"
                  },
                  "isPaid": { "type": "boolean" },
                  "paymentMethod": {
                    "type": "string",
                    "enum": ["BANK_TRANSFER", "CASH"],
                    "nullable": true,
                    "description": "Required when isPaid is true. Can be null when isPaid is false"
                  },
                  "paymentProof": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true,
                    "description": "Required when isPaid is true and paymentMethod is BANK_TRANSFER. Can be null when isPaid is false or paymentMethod is CASH. Max 2 MB."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGlobalResponse"
                },
                "example": {
                  "message": "Order created successfully",
                  "data": {
                    "id": "cmgkjjfzn0000jxba16eqlsre",
                    "orderCode": "ORD-CMGKJJFZN-0000JXBA16EQLSRE",
                    "userId": "cmgkjjfzn0000jxba16eqlsre",
                    "customerName": "John Doe",
                    "customerCategory": "UMUM",
                    "phoneNumber": "+6281234567890",
                    "deliveryOptions": "DELIVERY",
                    "readyDate": "2023-01-01T00:00:00.000Z",
                    "shippingCost": 5000,
                    "deliveryAddress": "Jl. Contoh, Kota Contoh, Negara Contoh",
                    "totalPrice": 10000,
                    "paymentMethod": "BANK_TRANSFER",
                    "paymentStatus": "UNPAID",
                    "orderStatus": "IN_PROCESS",
                    "orderDate": "2023-01-01T00:00:00.000Z",
                    "items": [
                      {
                        "id": "cmgkjjfzn0000jxba16eqlsre",
                        "productId": "cmgkjjfzn0000jxba16eqlsre",
                        "quantity": 2,
                        "message": "Pesan tambahan"
                      }
                    ],
                    "images": [
                      {
                        "id": "cmgmyd6bm0004msism6v8mm8l",
                        "type": "PAYMENT_PROOF",
                        "fileName": "ORD-31MGMYD6BL-41795C-207.png",
                        "size": 629754,
                        "url": "/home/andev/Pictures/myrekap/bukti-pembayaran/ORD-31MGMYD6BL-41795C-207.png",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Order not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnprocessableEntityValidationErrorResponse": {
                    "$ref": "#/components/examples/UnprocessableEntityOrders"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}/progress": {
      "patch": {
        "tags": ["Orders"],
        "summary": "Update order by ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-app-name"
          },
          {
            "$ref": "#/components/parameters/order-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string" },
                  "finishedProduct": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderGlobalResponse"
                },
                "example": {
                  "message": "Update order status successfully",
                  "data": {
                    "id": "cmgmyd6bm0001msisu6ksrbkm",
                    "orderCode": "ORD-31MGMYD6BL-41795C",
                    "userId": "cmgmg3v820000ms7cm1g7gz0i",
                    "customerName": "Budi",
                    "customerCategory": "UMUM",
                    "phoneNumber": "08123456789",
                    "deliveryOption": "DELIVERY",
                    "readyDate": "2025-08-28T00:00:00.000Z",
                    "shippingCost": 1000,
                    "deliveryAddress": "Jl. Mawar No. 12",
                    "totalPrice": 40000,
                    "paymentMethod": null,
                    "paymentStatus": "UNPAID",
                    "orderStatus": "COMPLETED",
                    "orderDate": "2025-10-12T00:15:05.026Z",
                    "items": [
                      {
                        "id": "cmgmyd6bm0003msis3uvo04r5",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm",
                        "productId": "cmgmgtaiz0000ms8nx0lgpgg2",
                        "quantity": 2,
                        "message": "Happy Birthday",
                        "unitPrice": 20000,
                        "totalPrice": 40000,
                        "product": {
                          "id": "cmgmgtaiz0000ms8nx0lgpgg2",
                          "productCode": "PRD-F7MGMGTAIZ-7CBF4D",
                          "name": "Bloomboxa",
                          "price": 20000,
                          "isActive": true
                        }
                      }
                    ],
                    "images": [
                      {
                        "id": "cmgmyd6bm0004msism6v8mm8l",
                        "type": "PAYMENT_PROOF",
                        "fileName": "ORD-31MGMYD6BL-41795C-207.png",
                        "size": 629754,
                        "url": "/home/andev/Pictures/myrekap/bukti-pembayaran/ORD-31MGMYD6BL-41795C-207.png",
                        "orderId": "cmgmyd6bm0001msisu6ksrbkm"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "UnauthorizedSessionExpiredResponse": {
                    "$ref": "#/components/examples/UnauthorizedSessionExpiredResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Order not found",
                  "errorCode": 4002,
                  "errors": null
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "x-app-name": {
        "name": "x-app-name",
        "in": "header",
        "description": "Application name used to match the cookie token (token_{x-app-name}) for authentication.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "MyRekap": {
            "value": "myrekap"
          },
          "MyFlower": {
            "value": "myflower"
          }
        }
      },
      "user-id": {
        "name": "id",
        "in": "path",
        "description": "ID of the user",
        "required": true,
        "schema": {
          "type": "string",
          "example": "cmgkjjfzn0000jxba16eqlsre"
        }
      },
      "product-id": {
        "name": "id",
        "in": "path",
        "description": "ID of the product",
        "required": true,
        "schema": {
          "type": "string",
          "example": "cmgmgtaiz0000ms8nx0lgpgg2"
        }
      },
      "order-id": {
        "name": "id",
        "in": "path",
        "description": "ID of the order",
        "required": true,
        "schema": {
          "type": "string",
          "example": "cmgmyd6bm0001msisu6ksrbkm"
        }
      }
    },
    "securitySchemes": {
      "BearerResetToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT for password reset. Obtain this token from the response of POST /auth/otp/verify with type \"reset_password\" in the field \"resetToken\". Send it via header: Authorization: Bearer {resetToken}."
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errorCode": {
            "type": "integer"
          },
          "errors": {
            "type": "array",
            "nullable": true,
            "items": {}
          }
        }
      },
      "VerifyOTPEmailVerificationResponse": {
        "type": "object",
        "description": "Response for successful email verification.",
        "properties": {
          "message": { "type": "string" },
          "data": {
            "type": "object",
            "properties": {
              "success": { "type": "boolean" },
              "type": { "type": "string", "enum": ["EMAIL_VERIFICATION"] },
              "data": {
                "type": "object",
                "properties": {
                  "fullName": { "type": "string" },
                  "role": { "type": "string", "enum": ["SUPERADMIN", "ADMIN", "CUSTOMER"] }
                }
              }
            }
          }
        }
      },
      "VerifyOTPPasswordResetResponse": {
        "type": "object",
        "description": "Response for successful password reset verification. The 'resetToken' field in the response should be used as the Bearer token for 'BearerResetToken' authentication.",
        "properties": {
          "message": { "type": "string" },
          "data": {
            "type": "object",
            "properties": {
              "success": { "type": "boolean" },
              "type": { "type": "string", "enum": ["PASSWORD_RESET"] },
              "resetToken": {
                "type": "string",
                "description": "JWT used for password reset authentication (BearerResetToken)."
              }
            }
          }
        }
      },
      "UserGlobalResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "userCode": { "type": "string" },
              "username": { "type": "string" },
              "email": { "type": "string" },
              "role": { "type": "string" },
              "isVerified": { "type": "boolean" }
            }
          }
        }
      },
      "ProductGlobalResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "productCode": { "type": "string" },
              "name": { "type": "string" },
              "price": { "type": "number" },
              "isActive": { "type": "boolean" }
            }
          }
        }
      },
      "OrderGlobalResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "orderCode": { "type": "string" },
          "userId": { "type": "string" },
          "customerName": { "type": "string" },
          "customerCategory": { "type": "string", "enum": ["UMUM", "PEMDA", "PERBANKAN"] },
          "phoneNumber": { "type": "string" },
          "deliveryOptions": { "type": "string", "enum": ["SELF_PICKUP", "DELIVERY"] },
          "readyDate": { "type": "string" },
          "shippingCost": { "type": "number" },
          "deliveryAddress": { "type": "string" },
          "totalPrice": { "type": "number" },
          "paymentMethod": { "type": "string", "enum": ["BANK_TRANSFER", "CASH_ON_DELIVERY"] },
          "paymentStatus": { "type": "string", "enum": ["PAID", "UNPAID"] },
          "orderStatus": { "type": "string", "enum": ["IN_PROCESS", "COMPLETED", "CANCELLED"] },
          "orderDate": { "type": "string" },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderImage"
            }
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "orderId": { "type": "string" },
          "productId": { "type": "string" },
          "quantity": { "type": "number" },
          "message": { "type": "string" },
          "unitPrice": { "type": "number" },
          "totalPrice": { "type": "number" },
          "product": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "productCode": { "type": "string" },
              "name": { "type": "string" },
              "price": { "type": "number" },
              "isActive": { "type": "boolean" }
            }
          }
        }
      },
      "OrderImage": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string" },
          "fileName": { "type": "string" },
          "size": { "type": "number" },
          "url": { "type": "string" },
          "orderId": { "type": "string" }
        }
      }
    },
    "examples": {
      "MissingAppName": {
        "value": {
          "message": "Invalid or missing header: x-app-name. Allowed values are 'myrekap' or 'myflower'.",
          "errorCode": 2003,
          "errors": null
        }
      },
      "RequireMyRekapApp": {
        "value": {
          "message": "Invalid header. This endpoint is restricted to requests containing 'x-app-name: myrekap' header",
          "errorCode": 2006,
          "errors": null
        }
      },
      "RequireMyFlowerApp": {
        "value": {
          "message": "Invalid header. This endpoint is restricted to requests containing 'x-app-name: myflower' header",
          "errorCode": 2006,
          "errors": null
        }
      },
      "AccessDeniedMyRekap": {
        "summary": "Access denied, Superadmin and Admin only",
        "value": {
          "message": "Access denied. Only Superadmin and Admin can access MyRekap",
          "errorCode": 2002,
          "errors": null
        }
      },
      "AccessDeniedMyFlower": {
        "summary": "Access denied. Only Customer can access MyFlower",
        "value": {
          "message": "Access denied. Only Customer can access MyFlower",
          "errorCode": 2002,
          "errors": null
        }
      },
      "AccessDeniedSuperadminOnly": {
        "summary": "Access denied, Superadmin only",
        "value": {
          "message": "Access denied. Only Superadmin has permission",
          "errorCode": 2002,
          "errors": null
        }
      },
      "UnauthorizedSessionExpiredResponse": {
        "summary": "Unauthorized Session Expired",
        "value": {
          "message": "Your session has expired. Please log in again",
          "errorCode": 2001,
          "errors": null
        }
      },
      "UnprocessableEntityUsers": {
        "summary": "Unprocessable Entity Users",
        "value": {
          "message": "Invalid data",
          "errorCode": 8001,
          "errors": [
            {
              "validation": "email",
              "code": "invalid_string",
              "message": "Invalid email",
              "path": ["email"]
            },
            {
              "code": "too_small",
              "minimum": 6,
              "type": "string",
              "inclusive": true,
              "exact": false,
              "message": "Password must be at least 6 characters long",
              "path": ["password"]
            }
          ]
        }
      },
      "UnprocessableEntityProducts": {
        "summary": "Unprocessable Entity Users",
        "value": {
          "message": "Invalid data",
          "errorCode": 8001,
          "errors": [
            {
              "code": "too_small",
              "minimum": 1,
              "type": "number",
              "inclusive": true,
              "exact": false,
              "message": "Price must be greater than 0",
              "path": ["price"]
            }
          ]
        }
      },
      "UnprocessableEntityOrders": {
        "summary": "Unprocessable Entity Orders",
        "value": {
          "message": "Invalid data",
          "errorCode": 8001,
          "errors": [
            {
              "path": ["deliveryAddress"],
              "code": "custom",
              "message": "Delivery address is required for delivery"
            }
          ]
        }
      },
      "UserAlreadyExists": {
        "summary": "User Already Exists",
        "value": {
          "message": "The username or email is already taken",
          "errorCode": 1004,
          "errors": null
        }
      }
    }
  }
}
